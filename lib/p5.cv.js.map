{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./p5.cv.utils.js","webpack:///./p5.cv.utilities.js","webpack:///./p5.cv.helpers.js","webpack:///./p5.cv.wrappers.js","webpack:///./p5.cv.tracker.js","webpack:///./p5.cv.running_background.js","webpack:///./p5.cv.object_finder.js","webpack:///./p5.cv.flow.js","webpack:///./p5.cv.contour_finder.js","webpack:///./app.js"],"names":["p5","cv","prototype","loadOpenCV","onRuntimeInitialized","isReady","onComplete","createFileFromUrl","path","url","callback","request","XMLHttpRequest","open","responseType","onload","ev","readyState","status","data","Uint8Array","response","FS_createDataFile","console","error","send","loadImageToCanvas","cavansId","canvas","document","getElementById","ctx","getContext","img","Image","crossOrigin","width","height","drawImage","src","registerMethod","getWidth","sourceMat","cols","getHeight","rows","getAllocated","getDepthForType","cvImageType","CV_MAT_DEPTH","getDepthForMat","depth","getDepthForImage","CV_8UC4","CV_8UC","channels","CV_8UC1","CV_8UC2","CV_8UC3","CV_8SC","CV_8SC1","CV_8SC2","CV_8SC3","CV_8SC4","CV_16UC","CV_16UC1","CV_16UC2","CV_16UC3","CV_16UC4","CV_16SC","CV_16SC1","CV_16SC2","CV_16SC3","CV_16SC4","CV_32SC","CV_32SC1","CV_32SC2","CV_32SC3","CV_32SC4","CV_32FC","CV_32FC1","CV_32FC2","CV_32FC3","CV_32FC4","CV_64FC","CV_64FC1","CV_64FC2","CV_64FC3","CV_64FC4","CV_CN_MAX","CV_CN_SHIFT","CV_DEPTH_MAX","CV_MAT_CN_MASK","CV_MAT_CN","flags","CV_MAT_DEPTH_MASK","CV_MAKETYPE","cn","getCvImageType","cvDepth","CV_8U","getCvImageTypeForImage","getChannelsForType","getChannelsForImage","getChannelsForMat","copyTo","destinationMat","type","alpha","getMaxVal","convertTo","copy","dstDepth","allocate","cvType","create","imitateWithType","mirror","original","mirrorCvImageType","ow","oh","imitate","getMaxValForDepth","CV_16U","CV_8S","CV_16S","CV_32S","CV_32F","CV_64F","getMaxValForMat","mat","getColorConversionTypes","types","property","indexOf","push","getTargetChannelsFromCode","conversionCode","COLOR_RGB2RGBA","COLOR_RGBA2RGB","COLOR_RGB2BGRA","COLOR_RGBA2BGR","COLOR_BGR2RGB","COLOR_BGRA2RGBA","COLOR_BGR2GRAY","COLOR_RGB2GRAY","COLOR_GRAY2RGB","COLOR_GRAY2RGBA","COLOR_BGRA2GRAY","COLOR_RGBA2GRAY","COLOR_BGR5652BGR","COLOR_BGR5652RGB","COLOR_BGR5652BGRA","COLOR_BGR5652RGBA","COLOR_BGR5652GRAY","COLOR_BGR5552BGR","COLOR_BGR5552RGB","COLOR_BGR5552BGRA","COLOR_BGR5552RGBA","COLOR_BGR5552GRAY","COLOR_BGR2XYZ","COLOR_RGB2XYZ","COLOR_XYZ2BGR","COLOR_XYZ2RGB","COLOR_BGR2YCrCb","COLOR_RGB2YCrCb","COLOR_YCrCb2BGR","COLOR_YCrCb2RGB","COLOR_BGR2HSV","COLOR_RGB2HSV","COLOR_BGR2Lab","COLOR_RGB2Lab","COLOR_BayerGB2BGR","COLOR_BayerBG2RGB","COLOR_BayerGB2RGB","COLOR_BayerRG2RGB","COLOR_BGR2Luv","COLOR_RGB2Luv","COLOR_BGR2HLS","COLOR_RGB2HLS","COLOR_HSV2BGR","COLOR_HSV2RGB","COLOR_Lab2BGR","COLOR_Lab2RGB","COLOR_Luv2BGR","COLOR_Luv2RGB","COLOR_HLS2BGR","COLOR_HLS2RGB","COLOR_BayerBG2RGB_VNG","COLOR_BayerGB2RGB_VNG","COLOR_BayerRG2RGB_VNG","COLOR_BayerGR2RGB_VNG","COLOR_BGR2HSV_FULL","COLOR_RGB2HSV_FULL","COLOR_BGR2HLS_FULL","COLOR_RGB2HLS_FULL","COLOR_HSV2BGR_FULL","COLOR_HSV2RGB_FULL","COLOR_HLS2BGR_FULL","COLOR_HLS2RGB_FULL","COLOR_LBGR2Lab","COLOR_LRGB2Lab","COLOR_LBGR2Luv","COLOR_LRGB2Luv","COLOR_Lab2LBGR","COLOR_Lab2LRGB","COLOR_Luv2LBGR","COLOR_Luv2LRGB","COLOR_BGR2YUV","COLOR_RGB2YUV","COLOR_YUV2BGR","COLOR_YUV2RGB","pixelsToCvMat","pixels","matFromArray","imageDataToCvMat","imageData","matFromImageData","vectorsToCvContour","points","length","map","pt","x","y","flat","colorToCvScalar","color","levels","cvRotatedRectToPoints","rect","RotatedRect","cvRotatedRectToVectors","createVector","cvContourToPoints","contour","cvPointsToJS","cvPointToVector","point","cvRectVectorToArray","rectVector","array","rectVectorSize","size","i","get","ZERO_SCALAR","makeMatrix","rotation","translation","rot3x3","Mat","Rodrigues","rm","data32F","tm","applyMatrix","transformationMatrix4x4","drawMat","p5Image","matToNewImage","image","drawVectors","vectors","close","numVectors","vector","beginShape","vertex","endShape","drawRotatedRect","rotatedRect","center","translate","rotate","radians","angle","pop","drawRotatedEllipse","rotatedEllipse","ellipse","findMaxLocation","minMaxLoc","maxLoc","meanCols","colMat","row","mean","col","meanRows","rowMat","sumCols","reduce","a","b","sumRows","minCols","minVal","minRows","maxCols","maxVal","maxRows","findFirst","target","charAt","findLast","getBoundingBox","thresh","invert","THRESH_BINARY_INV","THRESH_BINARY","box","Rect","threshold","weightedAverageAngle","linesMat","angleSum","weights","start","Point","data32S","end","diff","Vector","sub","mag","weight","atan2","autorotate","threshold1","threshold2","threshMat","Canny","lines","distanceResolution","angleResolution","PI","voteThreshold","minLineLength","srcMat","maxLineGap","HoughLinesP","rotationAmount","ofRadToDeg","imageToNewMat","sourceImage","imread","imageToMat","cvMat","sourceWidth","sourceHeight","getImageData","set","getCvVideoCapture","p5Capture","VideoCapture","elt","getRGBAMat","getGrayscaleMat","matToImage","destinationImage","imshow","createImage","areSamesize","matA","matB","Scalar","add","invertTo","bitwise_not","lerp","lerpFromMat","lerpToMat","lerpResult","amount","addWeighted","accumulate","newMat","accumulatorMat","accumulateWeighted","mask","normalizeTo","normalize","NORM_MINMAX","thresholdTo","thresholdValue","thresholdType","MINUS_ONE_POINT","erodeTo","iterations","erode","dilateTo","dilate","autothresholdTo","THRESH_OTSU","autothreshold","convertColor","code","targetChannels","cvtColor","convertSingleColor","p5Color","zeros","Color","Array","warn","from","copyGray","forceOdd","Math","floor","blurTo","blur","Size","GaussianBlurTo","GaussianBlur","medianBlurTo","medianBlur","equalizeHistTo","sourceChannels","MatVector","destinationChannels","split","equalizeHist","merge","apertureSize","L2gradient","Sobel","ddepth","dx","dy","ksize","scale","delta","borderType","BORDER_DEFAULT","warpPerspective","destinationPoints","INTER_LINEAR","w","h","sourcePoints","transform","getPerspectiveTransform","unwarpPerspective","warpPerspectiveFromTranform","resizeTo","interpolation","resize","resizeToScale","xScale","yScale","dstWidth","dstHeight","resizeToDimensions","result","drawContour","cvPointsToVectors","cvFeaturesToPoints","getFeatureAsPoint","index","cvLineToJS","cvLineToVectors","getConvexHullMat","contourMat","hull","convexHull","convexHullFromMat","convexityDefectsCv","defects","convexityDefects","convexityDefectsFromVectors","minAreaRectFromVectors","minAreaRect","fitEllipseFromVectors","fitEllipse","fitLineFromVectors","line","fitLine","DIST_L2","vx","vy","lefty","round","righty","point1","point2","fillPoly","numPoints","setTo","FLIP_HORIZONTAL","FLIP_VERTICAL","FLIP_BOTH","flipTo","flip","rotateTo","fill","rotationMatrix","getRotationMatrix2D","warpAffine","BORDER_CONSTANT","rotate90To","transpose","rotate90","transposeTo","swap","temp","clone","trackingDistanceRect","dw","dh","pd","sqrt","sd","trackingDistancePoint","dist","isPoint","isRect","trackingDistance","TrackedObject","object","label","lastSeen","age","previous","old","visible","Tracker","current","currentLabels","previousLabels","newLabels","deadLabels","previousLabelMap","Map","currentLabelMap","persistence","curLabel","maximumDistance","persistance","distance","objects","concat","n","m","all","j","curDistance","pair","sort","sortByDistance","matchedObjects","matchedPrevious","allSize","k","match","newFromPrevious","initFromPreviousObject","timeStep","getLabel","getNewLabel","newWithLabel","initFromObject","getLastSeen","clear","currentSize","previousSize","has","getIndex","getAge","RectTracker","smoothingRate","smoothed","labels","labelsSize","cur","getCurrent","smooth","entries","trackedRect","existsCurrent","getLabelFromIndex","existsPrevious","getPrevious","previousPosition","currentPosition","PointTracker","Follower","dead","track","RectFollower","PointFollower","TrackerFollower","followers","curFollower","kill","update","newLabelsSize","newFollower","setup","setLabel","getDead","splice","RectTrackerFollower","PointTrackerFollower","DifferenceMode","ABSDIFF","BRIGHTER","DARKER","RunningBackground","learningRate","learningTime","useLearningTime","ignoreForeground","needToReset","differenceMode","accumulator","background","foreground","foregroundGray","frame","thresholded","empty","absdiff","subtract","thresholdMode","curLearningRate","float","pow","ObjectFinder","rescale","multiScaleFactor","minNeighbors","minSizeScale","maxSizeScale","useHistogramEqualization","cannyPrunning","findBiggestObject","gray","graySmall","classifier","CascadeClassifier","tracker","cascadeFilename","load","newFrameMat","minSize","maxSize","minSide","min","side","RectVector","detectMultiScale","cannyPruning","CASCADE_DO_CANNY_PRUNING","CASCADE_FIND_BIGGEST_OBJECT","CASCADE_DO_ROUGH_SEARCH","objectsSize","getSmoothed","getVelocity","getCurrentLabels","noFill","stroke","getObject","text","preset","FAST","setRescale","setMinNeighbors","setMultiScaleFactor","setMinSizeScale","setMaxSizeScale","setCannyPruning","setFindBiggestObject","ACCURATE","SENSITIVE","Flow","last","curr","hasFlow","lastMat","currentMat","calcFlow","lastSize","currSize","renderWidth","renderHeight","drawFlow","prevMat","nextMat","FlowPyrLK","prevPts","nextPts","windowSize","maxLevel","maxFeatures","maxCorners","blockSize","qualityLevel","minDistance","criteria","TermCriteria","TERM_CRITERIA_EPS","TERM_CRITERIA_COUNT","pyramidLevels","calcFeaturesNextFrame","pyramid","prevPyramid","err","winSize","featuresSize","features","resetFeaturesToTrack","drawX","drawY","drawWidth","drawHeight","scaleX","scaleY","prevPtsSize","LINES","calcFeaturesToTrack","calcOpticalFlowPyrLK","goodFeaturesToTrack","FlowFarneback","flow","pyramidScale","numLevels","numIterations","polyN","polySigma","farnebackGaussian","renderStep","constrain","gaussian","OPTFLOW_USE_INITIAL_FLOW","OPTFLOW_FARNEBACK_GAUSSIAN","calcOpticalFlowFarneback","getTotalFlowInRegion","getAverageFlowInRegion","xIndex","yIndex","position","getFlowOffset","regionX","regionY","regionWidth","regionHeight","total","rectX","rectY","rectWidth","rectHeight","log","flowPosition","getFlowPosition","Graph","historyLength","minValue","maxValue","history","Float32Array","sample","offset","range","strokeWeight","normalized","samePixels","a1","a2","stride","same","matAGray","matBGray","countNonZero","OFlow","step","uMotionGraph","vMotionGraph","newImage","oldImage","zones","winStep","A2","A1B2","B1","C1","C2","u","v","uu","vv","wMax","hMax","globalY","globalX","localY","localX","address","gradX","gradY","gradT","Idelta","deltaX","deltaY","norm","IGradNorm","addSample","forEach","zone","draw","TrackingColorMode","TRACK_COLOR_RGB","TRACK_COLOR_HSV","TRACK_COLOR_H","TRACK_COLOR_HS","ContourFinder","hsvBuffer","autoThreshold","simplify","thresholdValueMax","useTargetColor","trackingColorMode","targetColor","minArea","maxArea","Number","POSITIVE_INFINITY","minAreaNorm","maxAreaNorm","contours","polylines","boundingRects","holes","contourFindingMode","RETR_EXTERNAL","sortBySize","resetMinArea","resetMaxArea","base","lowerb","upperb","inRange","allContours","hierarchy","simplifyMode","CHAIN_APPROX_SIMPLE","CHAIN_APPROX_NONE","findContours","needMinFilter","needMaxFilter","allIndices","allAreas","allHoles","imgArea","imgMinArea","imgMaxArea","curArea","contourArea","hole","allIndicesSize","boundingRect","findHoles","RETR_LIST","sizeSort","getBoundingRect","moments","m00","m10","m01","cvPoint","average","getCentroid","getCenter","arcLength","minEnclosingCircle","getMinAreaRect","getConvexHull","quad","targetPoints","maxIterations","infinity","minEpsilon","maxEpsilon","curEpsilon","approxPolyDP","polylinesSize","setMinArea","setMaxArea","minAreaRadius","maxAreaRadius","window"],"mappings":"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","file":"p5.cv.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","// OpenCV.js <-> p5.js setup\np5.cv = {};\np5.prototype.loadOpenCV = function () {\n  // from https://docs.opencv.org/4.4.0/utils.js\n\n  cv.onRuntimeInitialized = function () {\n    p5.cv.isReady = true;\n    if (p5.cv.onComplete) {\n      p5.cv.onComplete();\n    }\n  };\n\n  p5.cv.createFileFromUrl = function (path, url, callback) {\n    let request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function (ev) {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          let data = new Uint8Array(request.response);\n          cv.FS_createDataFile('/', path, data, true, false, false);\n          callback();\n        } else {\n          console.error('Failed to load ' + url + ' status: ' + request.status);\n        }\n      }\n    };\n    request.send();\n  };\n\n  p5.cv.loadImageToCanvas = function (url, cavansId) {\n    let canvas = document.getElementById(cavansId);\n    let ctx = canvas.getContext('2d');\n    let img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.onload = function () {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0, img.width, img.height);\n    };\n    img.src = url;\n  };\n};\n\np5.prototype.registerMethod('init', p5.prototype.loadOpenCV);\n","// Utilities.h\n\np5.cv.getWidth = function (sourceMat) {\n  return sourceMat.cols;\n};\np5.cv.getHeight = function (sourceMat) {\n  return sourceMat.rows;\n};\np5.cv.getAllocated = function (sourceMat) {\n  //return p5.cv.getWidth(sourceMat) > 0 && p5.cv.getHeight(sourceMat) > 0;\n  return sourceMat.rows > 0 && sourceMat.cols > 0;\n};\np5.cv.getDepthForType = function (cvImageType) {\n  return cv.CV_MAT_DEPTH(cvImageType);\n};\np5.cv.getDepthForMat = function (sourceMat) {\n  return sourceMat.depth();\n};\n// p5.Image / p5.Graphics will use Canvas = RGBA\np5.cv.getDepthForImage = function () {\n  return cv.CV_8UC4;\n};\ncv.CV_8UC = function (channels) {\n  if (channels === 1) return cv.CV_8UC1;\n  if (channels === 2) return cv.CV_8UC2;\n  if (channels === 3) return cv.CV_8UC3;\n  if (channels === 4) return cv.CV_8UC4;\n  return cv.CV_8UC1;\n};\ncv.CV_8SC = function (channels) {\n  if (channels === 1) return cv.CV_8SC1;\n  if (channels === 2) return cv.CV_8SC2;\n  if (channels === 3) return cv.CV_8SC3;\n  if (channels === 4) return cv.CV_8SC4;\n  return cv.CV_8SC1;\n};\ncv.CV_16UC = function (channels) {\n  if (channels === 1) return cv.CV_16UC1;\n  if (channels === 2) return cv.CV_16UC2;\n  if (channels === 3) return cv.CV_16UC3;\n  if (channels === 4) return cv.CV_16UC4;\n  return cv.CV_16UC1;\n};\ncv.CV_16SC = function (channels) {\n  if (channels === 1) return cv.CV_16SC1;\n  if (channels === 2) return cv.CV_16SC2;\n  if (channels === 3) return cv.CV_16SC3;\n  if (channels === 4) return cv.CV_16SC4;\n  return cv.CV_16SC1;\n};\ncv.CV_32SC = function (channels) {\n  if (channels === 1) return cv.CV_32SC1;\n  if (channels === 2) return cv.CV_32SC2;\n  if (channels === 3) return cv.CV_32SC3;\n  if (channels === 4) return cv.CV_32SC4;\n  return cv.CV_32SC1;\n};\ncv.CV_32FC = function (channels) {\n  if (channels === 1) return cv.CV_32FC1;\n  if (channels === 2) return cv.CV_32FC2;\n  if (channels === 3) return cv.CV_32FC3;\n  if (channels === 4) return cv.CV_32FC4;\n  return cv.CV_32FC1;\n};\ncv.CV_64FC = function (channels) {\n  if (channels === 1) return cv.CV_64FC1;\n  if (channels === 2) return cv.CV_64FC2;\n  if (channels === 3) return cv.CV_64FC3;\n  if (channels === 4) return cv.CV_64FC4;\n  return cv.CV_64FC1;\n};\n\ncv.CV_CN_MAX = 512;\ncv.CV_CN_SHIFT = 3;\ncv.CV_DEPTH_MAX = 1 << cv.CV_CN_SHIFT;\n// #define CV_MAT_CN_MASK          ((CV_CN_MAX - 1) << CV_CN_SHIFT)\ncv.CV_MAT_CN_MASK = (cv.CV_CN_MAX - 1) << cv.CV_CN_SHIFT;\ncv.CV_MAT_CN = function (flags) {\n  return ((flags & cv.CV_MAT_CN_MASK) >> cv.CV_CN_SHIFT) + 1;\n};\ncv.CV_MAT_DEPTH_MASK = cv.CV_DEPTH_MAX - 1;\ncv.CV_MAT_DEPTH = function (flags) {\n  return flags & cv.CV_MAT_DEPTH_MASK;\n};\ncv.CV_MAKETYPE = function (depth, cn) {\n  return cv.CV_MAT_DEPTH(depth) + ((cn - 1) << cv.CV_CN_SHIFT);\n};\np5.cv.getCvImageType = function (channels, cvDepth = cv.CV_8U) {\n  return cv.CV_MAKETYPE(cvDepth, channels);\n};\np5.cv.getCvImageTypeForImage = function (cvDepth = CV_8U) {\n  return cv.CV_MAKETYPE(cvDepth, 4);\n};\np5.cv.getChannelsForType = function (cvImageType) {\n  return cv.CV_MAT_CN(cvImageType);\n};\n// p5.Image / p5.Graphics will use Canvas = RGBA\np5.cv.getChannelsForImage = function () {\n  return 4;\n};\np5.cv.getChannelsForMat = function (sourceMat) {\n  return sourceMat.channels();\n};\np5.cv.copyTo = function (sourceMat, destinationMat) {\n  if (sourceMat.type() === destinationMat.type()) {\n    sourceMat.copyTo(destinationMat);\n  } else {\n    let alpha = p5.cv.getMaxVal(destinationMat) / p5.cv.getMaxVal(sourceMat);\n    sourceMat.convertTo(destinationMat, destinationMat.depth(), alpha);\n  }\n};\np5.cv.copy = function (sourceMat, destinationMat) {\n  let dstDepth;\n  if (p5.cv.getAllocated(destinationMat)) {\n    dstDepth = p5.cv.getDepthForMat(destinationMat);\n  } else {\n    dstDepth = p5.cv.getDepthForMat(sourceMat);\n  }\n  p5.cv.copyTo(sourceMat, destinationMat, dstDepth);\n};\n\np5.cv.allocate = function (sourceMat, width, height, cvType) {\n  if (\n    p5.cv.getWidth(sourceMat) !== width ||\n    p5.cv.getHeight(sourceMat) !== height ||\n    p5.cv.getCvImageType(sourceMat) !== cvType\n  ) {\n    sourceMat.create(height, width, cvType);\n  }\n};\np5.cv.imitateWithType = function (mirror, original, mirrorCvImageType) {\n  let ow = p5.cv.getWidth(original),\n    oh = p5.cv.getHeight(original);\n  p5.cv.allocate(mirror, ow, oh, mirrorCvImageType);\n};\np5.cv.imitate = function (mirror, original) {\n  p5.cv.imitateWithType(mirror, original, p5.cv.getCvImageType(original));\n};\n// maximum possible values for that depth or matrix\np5.cv.getMaxValForDepth = function (cvDepth) {\n  switch (cvDepth) {\n    case cv.CV_8U:\n      return 255;\n    case cv.CV_16U:\n      return 65535;\n\n    case cv.CV_8S:\n      return 127;\n    case cv.CV_16S:\n      return 32767;\n    case cv.CV_32S:\n      return 2147483647;\n\n    case cv.CV_32F:\n      return 1.0;\n    case cv.CV_64F:\n    default:\n      return 1.0;\n  }\n};\n\np5.cv.getMaxValForMat = function (mat) {\n  return p5.cv.getMaxValForDepth(mat.depth());\n};\n\n// float getMaxVal(const cv::Mat& mat);\np5.cv.getColorConversionTypes = function () {\n  let types = [];\n  for (property in cv) {\n    if (property.indexOf('COLOR_') === 0) {\n      types.push(property);\n    }\n  }\n  return types;\n};\np5.cv.getTargetChannelsFromCode = function (conversionCode) {\n  // TODO: add the rest of the modes\n  // [\"COLOR_BGR2BGR555\",\"COLOR_BGR2BGR565\",\"COLOR_BGR2BGRA\",\"COLOR_BGR2GRAY\",\"COLOR_BGR2HLS\",\"COLOR_BGR2HLS_FULL\",\"COLOR_BGR2HSV\",\"COLOR_BGR2HSV_FULL\",\"COLOR_BGR2Lab\",\"COLOR_BGR2Luv\",\"COLOR_BGR2RGB\",\"COLOR_BGR2RGBA\",\"COLOR_BGR2XYZ\",\"COLOR_BGR2YCrCb\",\"COLOR_BGR2YUV\",\"COLOR_BGR2YUV_I420\",\"COLOR_BGR2YUV_IYUV\",\"COLOR_BGR2YUV_YV12\",\"COLOR_BGR5552BGR\",\"COLOR_BGR5552BGRA\",\"COLOR_BGR5552GRAY\",\"COLOR_BGR5552RGB\",\"COLOR_BGR5552RGBA\",\"COLOR_BGR5652BGR\",\"COLOR_BGR5652BGRA\",\"COLOR_BGR5652GRAY\",\"COLOR_BGR5652RGB\",\"COLOR_BGR5652RGBA\",\"COLOR_BGRA2BGR\",\"COLOR_BGRA2BGR555\",\"COLOR_BGRA2BGR565\",\"COLOR_BGRA2GRAY\",\"COLOR_BGRA2RGB\",\"COLOR_BGRA2RGBA\",\"COLOR_BGRA2YUV_I420\",\"COLOR_BGRA2YUV_IYUV\",\"COLOR_BGRA2YUV_YV12\",\"COLOR_BayerBG2BGR\",\"COLOR_BayerBG2BGRA\",\"COLOR_BayerBG2BGR_EA\",\"COLOR_BayerBG2BGR_VNG\",\"COLOR_BayerBG2GRAY\",\"COLOR_BayerBG2RGB\",\"COLOR_BayerBG2RGBA\",\"COLOR_BayerBG2RGB_EA\",\"COLOR_BayerBG2RGB_VNG\",\"COLOR_BayerGB2BGR\",\"COLOR_BayerGB2BGRA\",\"COLOR_BayerGB2BGR_EA\",\"COLOR_BayerGB2BGR_VNG\",\"COLOR_BayerGB2GRAY\",\"COLOR_BayerGB2RGB\",\"COLOR_BayerGB2RGBA\",\"COLOR_BayerGB2RGB_EA\",\"COLOR_BayerGB2RGB_VNG\",\"COLOR_BayerGR2BGR\",\"COLOR_BayerGR2BGRA\",\"COLOR_BayerGR2BGR_EA\",\"COLOR_BayerGR2BGR_VNG\",\"COLOR_BayerGR2GRAY\",\"COLOR_BayerGR2RGB\",\"COLOR_BayerGR2RGBA\",\"COLOR_BayerGR2RGB_EA\",\"COLOR_BayerGR2RGB_VNG\",\"COLOR_BayerRG2BGR\",\"COLOR_BayerRG2BGRA\",\"COLOR_BayerRG2BGR_EA\",\"COLOR_BayerRG2BGR_VNG\",\"COLOR_BayerRG2GRAY\",\"COLOR_BayerRG2RGB\",\"COLOR_BayerRG2RGBA\",\"COLOR_BayerRG2RGB_EA\",\"COLOR_BayerRG2RGB_VNG\",\"COLOR_GRAY2BGR\",\"COLOR_GRAY2BGR555\",\"COLOR_GRAY2BGR565\",\"COLOR_GRAY2BGRA\",\"COLOR_GRAY2RGB\",\"COLOR_GRAY2RGBA\",\"COLOR_HLS2BGR\",\"COLOR_HLS2BGR_FULL\",\"COLOR_HLS2RGB\",\"COLOR_HLS2RGB_FULL\",\"COLOR_HSV2BGR\",\"COLOR_HSV2BGR_FULL\",\"COLOR_HSV2RGB\",\"COLOR_HSV2RGB_FULL\",\"COLOR_LBGR2Lab\",\"COLOR_LBGR2Luv\",\"COLOR_LRGB2Lab\",\"COLOR_LRGB2Luv\",\"COLOR_Lab2BGR\",\"COLOR_Lab2LBGR\",\"COLOR_Lab2LRGB\",\"COLOR_Lab2RGB\",\"COLOR_Luv2BGR\",\"COLOR_Luv2LBGR\",\"COLOR_Luv2LRGB\",\"COLOR_Luv2RGB\",\"COLOR_RGB2BGR\",\"COLOR_RGB2BGR555\",\"COLOR_RGB2BGR565\",\"COLOR_RGB2BGRA\",\"COLOR_RGB2GRAY\",\"COLOR_RGB2HLS\",\"COLOR_RGB2HLS_FULL\",\"COLOR_RGB2HSV\",\"COLOR_RGB2HSV_FULL\",\"COLOR_RGB2Lab\",\"COLOR_RGB2Luv\",\"COLOR_RGB2RGBA\",\"COLOR_RGB2XYZ\",\"COLOR_RGB2YCrCb\",\"COLOR_RGB2YUV\",\"COLOR_RGB2YUV_I420\",\"COLOR_RGB2YUV_IYUV\",\"COLOR_RGB2YUV_YV12\",\"COLOR_RGBA2BGR\",\"COLOR_RGBA2BGR555\",\"COLOR_RGBA2BGR565\",\"COLOR_RGBA2BGRA\",\"COLOR_RGBA2GRAY\",\"COLOR_RGBA2RGB\",\"COLOR_RGBA2YUV_I420\",\"COLOR_RGBA2YUV_IYUV\",\"COLOR_RGBA2YUV_YV12\",\"COLOR_RGBA2mRGBA\",\"COLOR_XYZ2BGR\",\"COLOR_XYZ2RGB\",\"COLOR_YCrCb2BGR\",\"COLOR_YCrCb2RGB\",\"COLOR_YUV2BGR\",\"COLOR_YUV2BGRA_I420\",\"COLOR_YUV2BGRA_IYUV\",\"COLOR_YUV2BGRA_NV12\",\"COLOR_YUV2BGRA_NV21\",\"COLOR_YUV2BGRA_UYNV\",\"COLOR_YUV2BGRA_UYVY\",\"COLOR_YUV2BGRA_Y422\",\"COLOR_YUV2BGRA_YUNV\",\"COLOR_YUV2BGRA_YUY2\",\"COLOR_YUV2BGRA_YUYV\",\"COLOR_YUV2BGRA_YV12\",\"COLOR_YUV2BGRA_YVYU\",\"COLOR_YUV2BGR_I420\",\"COLOR_YUV2BGR_IYUV\",\"COLOR_YUV2BGR_NV12\",\"COLOR_YUV2BGR_NV21\",\"COLOR_YUV2BGR_UYNV\",\"COLOR_YUV2BGR_UYVY\",\"COLOR_YUV2BGR_Y422\",\"COLOR_YUV2BGR_YUNV\",\"COLOR_YUV2BGR_YUY2\",\"COLOR_YUV2BGR_YUYV\",\"COLOR_YUV2BGR_YV12\",\"COLOR_YUV2BGR_YVYU\",\"COLOR_YUV2GRAY_420\",\"COLOR_YUV2GRAY_I420\",\"COLOR_YUV2GRAY_IYUV\",\"COLOR_YUV2GRAY_NV12\",\"COLOR_YUV2GRAY_NV21\",\"COLOR_YUV2GRAY_UYNV\",\"COLOR_YUV2GRAY_UYVY\",\"COLOR_YUV2GRAY_Y422\",\"COLOR_YUV2GRAY_YUNV\",\"COLOR_YUV2GRAY_YUY2\",\"COLOR_YUV2GRAY_YUYV\",\"COLOR_YUV2GRAY_YV12\",\"COLOR_YUV2GRAY_YVYU\",\"COLOR_YUV2RGB\",\"COLOR_YUV2RGBA_I420\",\"COLOR_YUV2RGBA_IYUV\",\"COLOR_YUV2RGBA_NV12\",\"COLOR_YUV2RGBA_NV21\",\"COLOR_YUV2RGBA_UYNV\",\"COLOR_YUV2RGBA_UYVY\",\"COLOR_YUV2RGBA_Y422\",\"COLOR_YUV2RGBA_YUNV\",\"COLOR_YUV2RGBA_YUY2\",\"COLOR_YUV2RGBA_YUYV\",\"COLOR_YUV2RGBA_YV12\",\"COLOR_YUV2RGBA_YVYU\",\"COLOR_YUV2RGB_I420\",\"COLOR_YUV2RGB_IYUV\",\"COLOR_YUV2RGB_NV12\",\"COLOR_YUV2RGB_NV21\",\"COLOR_YUV2RGB_UYNV\",\"COLOR_YUV2RGB_UYVY\",\"COLOR_YUV2RGB_Y422\",\"COLOR_YUV2RGB_YUNV\",\"COLOR_YUV2RGB_YUY2\",\"COLOR_YUV2RGB_YUYV\",\"COLOR_YUV2RGB_YV12\",\"COLOR_YUV2RGB_YVYU\",\"COLOR_YUV420p2BGR\",\"COLOR_YUV420p2BGRA\",\"COLOR_YUV420p2GRAY\",\"COLOR_YUV420p2RGB\",\"COLOR_YUV420p2RGBA\",\"COLOR_YUV420sp2BGR\",\"COLOR_YUV420sp2BGRA\",\"COLOR_YUV420sp2GRAY\",\"COLOR_YUV420sp2RGB\",\"COLOR_YUV420sp2RGBA\",\"COLOR_mRGBA2RGBA\"]\n  if (conversionCode === cv.COLOR_RGB2RGBA) return 4;\n  if (conversionCode === cv.COLOR_RGBA2RGB) return 3;\n  if (conversionCode === cv.COLOR_RGB2BGRA) return 4;\n  if (conversionCode === cv.COLOR_RGBA2BGR) return 3;\n  if (conversionCode === cv.COLOR_BGR2RGB) return 3;\n  if (conversionCode === cv.COLOR_BGRA2RGBA) return 4;\n  if (conversionCode === cv.COLOR_BGR2GRAY) return 1;\n  if (conversionCode === cv.COLOR_RGB2GRAY) return 1;\n  if (conversionCode === cv.COLOR_GRAY2RGB) return 3;\n  if (conversionCode === cv.COLOR_GRAY2RGBA) return 4;\n  if (conversionCode === cv.COLOR_BGRA2GRAY) return 1;\n  if (conversionCode === cv.COLOR_RGBA2GRAY) return 1;\n  if (conversionCode === cv.COLOR_BGR5652BGR) return 3;\n  if (conversionCode === cv.COLOR_BGR5652RGB) return 3;\n  if (conversionCode === cv.COLOR_BGR5652BGRA) return 4;\n  if (conversionCode === cv.COLOR_BGR5652RGBA) return 4;\n  if (conversionCode === cv.COLOR_BGR5652GRAY) return 1;\n  if (conversionCode === cv.COLOR_BGR5552BGR) return 3;\n  if (conversionCode === cv.COLOR_BGR5552RGB) return 3;\n  if (conversionCode === cv.COLOR_BGR5552BGRA) return 4;\n  if (conversionCode === cv.COLOR_BGR5552RGBA) return 4;\n  if (conversionCode === cv.COLOR_BGR5552GRAY) return 1;\n  if (conversionCode === cv.COLOR_BGR2XYZ) return 3;\n  if (conversionCode === cv.COLOR_RGB2XYZ) return 3;\n  if (conversionCode === cv.COLOR_XYZ2BGR) return 3;\n  if (conversionCode === cv.COLOR_XYZ2RGB) return 3;\n  if (conversionCode === cv.COLOR_BGR2YCrCb) return 3;\n  if (conversionCode === cv.COLOR_RGB2YCrCb) return 3;\n  if (conversionCode === cv.COLOR_YCrCb2BGR) return 3;\n  if (conversionCode === cv.COLOR_YCrCb2RGB) return 3;\n  if (conversionCode === cv.COLOR_BGR2HSV) return 3;\n  if (conversionCode === cv.COLOR_RGB2HSV) return 3;\n  if (conversionCode === cv.COLOR_BGR2Lab) return 3;\n  if (conversionCode === cv.COLOR_RGB2Lab) return 3;\n  if (conversionCode === cv.COLOR_BayerGB2BGR) return 3;\n  if (conversionCode === cv.COLOR_BayerBG2RGB) return 3;\n  if (conversionCode === cv.COLOR_BayerGB2RGB) return 3;\n  if (conversionCode === cv.COLOR_BayerRG2RGB) return 3;\n  if (conversionCode === cv.COLOR_BGR2Luv) return 3;\n  if (conversionCode === cv.COLOR_RGB2Luv) return 3;\n  if (conversionCode === cv.COLOR_BGR2HLS) return 3;\n  if (conversionCode === cv.COLOR_RGB2HLS) return 3;\n  if (conversionCode === cv.COLOR_HSV2BGR) return 3;\n  if (conversionCode === cv.COLOR_HSV2RGB) return 3;\n  if (conversionCode === cv.COLOR_Lab2BGR) return 3;\n  if (conversionCode === cv.COLOR_Lab2RGB) return 3;\n  if (conversionCode === cv.COLOR_Luv2BGR) return 3;\n  if (conversionCode === cv.COLOR_Luv2RGB) return 3;\n  if (conversionCode === cv.COLOR_HLS2BGR) return 3;\n  if (conversionCode === cv.COLOR_HLS2RGB) return 3;\n  if (conversionCode === cv.COLOR_BayerBG2RGB_VNG) return 3;\n  if (conversionCode === cv.COLOR_BayerGB2RGB_VNG) return 3;\n  if (conversionCode === cv.COLOR_BayerRG2RGB_VNG) return 3;\n  if (conversionCode === cv.COLOR_BayerGR2RGB_VNG) return 3;\n  if (conversionCode === cv.COLOR_BGR2HSV_FULL) return 3;\n  if (conversionCode === cv.COLOR_RGB2HSV_FULL) return 3;\n  if (conversionCode === cv.COLOR_BGR2HLS_FULL) return 3;\n  if (conversionCode === cv.COLOR_RGB2HLS_FULL) return 3;\n  if (conversionCode === cv.COLOR_HSV2BGR_FULL) return 3;\n  if (conversionCode === cv.COLOR_HSV2RGB_FULL) return 3;\n  if (conversionCode === cv.COLOR_HLS2BGR_FULL) return 3;\n  if (conversionCode === cv.COLOR_HLS2RGB_FULL) return 3;\n  if (conversionCode === cv.COLOR_LBGR2Lab) return 3;\n  if (conversionCode === cv.COLOR_LRGB2Lab) return 3;\n  if (conversionCode === cv.COLOR_LBGR2Luv) return 3;\n  if (conversionCode === cv.COLOR_LRGB2Luv) return 3;\n  if (conversionCode === cv.COLOR_Lab2LBGR) return 4;\n  if (conversionCode === cv.COLOR_Lab2LRGB) return 4;\n  if (conversionCode === cv.COLOR_Luv2LBGR) return 4;\n  if (conversionCode === cv.COLOR_Luv2LRGB) return 4;\n  if (conversionCode === cv.COLOR_BGR2YUV) return 3;\n  if (conversionCode === cv.COLOR_RGB2YUV) return 3;\n  if (conversionCode === cv.COLOR_YUV2BGR) return 3;\n  if (conversionCode === cv.COLOR_YUV2RGB) return 3;\n  return 0;\n};\n\np5.cv.pixelsToCvMat = function (width, height, pixels) {\n  return cv.matFromArray(width, height, cv.CV_8UC4, pixels);\n};\np5.cv.imageDataToCvMat = function (imageData) {\n  return cv.matFromImageData(imageData);\n};\n// std::vector<cv::Point2f> toCv(const ofPolyline& polyline);\n// TODO: ask Golan if vectorsToCvMat is explanatory enough: this can represent a contour or a hull\np5.cv.vectorsToCvContour = function (points) {\n  // extract x,y points into value array and flatten that\n  return cv.matFromArray(\n    points.length,\n    1,\n    cv.CV_32SC2,\n    points.map((pt) => [pt.x, pt.y]).flat()\n  );\n};\np5.cv.colorToCvScalar = function (color) {\n  return color.levels;\n};\n// TODO: cv::Mat toCv(ofMesh& mesh);\n// cv::Point2f toCv(ofVec2f vec); -> not required as any object with x,y properties will do the job as an input\n// cv::Point3f toCv(ofVec3f vec); -> to be implemented later as OpenCV.js support for 3D improves\n// cv::Rect toCv(ofRectangle rect); -> not required as any object with x, y, width, height properties will do the job as an input\n// ofRectangle toOf(cv::Rect rect); -> not required as x, y, width, height properties can be accessed directly\n\n// ofPolyline toOf(cv::RotatedRect rect);\np5.cv.cvRotatedRectToPoints = function (rect) {\n  return cv.RotatedRect.points(rect);\n};\np5.cv.cvRotatedRectToVectors = function (rect) {\n  return p5.cv\n    .cvRotatedRectToPoints(rect)\n    .map((pt) => createVector(pt.x, pt.y));\n};\n// template <class T> inline ofPolyline toOf(const std::vector<cv::Point_<T> >& contour)\np5.cv.cvContourToPoints = function (contour) {\n  return p5.cv.cvPointsToJS(contour);\n};\n/* // toOf functions\n  // TODO: add p5.cv.cvMatToImageData()\n  template <class T>\n  void toOf(cv::Mat mat, ofPixels_<T>& pixels) {\n    pixels.setFromExternalPixels(mat.ptr<T>(), mat.cols, mat.rows, mat.channels());\n  }\n  template <class T>\n  void toOf(cv::Mat mat, ofImage_<T>& img) {\n    imitate(img, mat);\n    toOf(mat, img.getPixels());\n  } */\n\np5.cv.cvPointToVector = function (point) {\n  // TODO: check if _setupDone and display a useful error otherwise\n  return createVector(point.x, point.y);\n};\n\np5.cv.cvRectVectorToArray = function (rectVector, array) {\n  let rectVectorSize = rectVector.size();\n  for (let i = 0; i < rectVectorSize; i++) {\n    array.push(rectVector.get(i));\n  }\n};\n","p5.cv.ZERO_SCALAR = [0, 0, 0, 0];\n// Helpers.h\n// TODO: test ! test ! test !\n//new cv.Mat(3, 3, cv.CV_32FC1,0)\np5.cv.makeMatrix = function (rotation, translation) {\n  let rot3x3;\n  if (rotation.rows === 3 && rotation.cols === 3) {\n    rot3x3 = rotation;\n  } else {\n    //rot3x3 = new cv.Mat();\n    rot3x3 = new cv.Mat(3, 3, cv.CV_32FC1, p5.cv.ZERO_SCALAR);\n    cv.Rodrigues(rotation, rot3x3);\n  }\n  let rm = rot3x3.data32F;\n  let tm = translation.data32F;\n  // TODO: is this ok ? should it be Float32Array instead ?\n  // dafuq is this formatting, eslint?!\n  return [\n    rm[0],\n    rm[3],\n    rm[6],\n    0.0,\n    rm[1],\n    rm[4],\n    rm[7],\n    0.0,\n    rm[2],\n    rm[5],\n    rm[8],\n    0.0,\n    tm[0],\n    tm[1],\n    tm[2],\n    1.0,\n  ];\n};\n// TODO! test test test!\np5.cv.applyMatrix = function (transformationMatrix4x4) {\n  applyMatrix(...transformationMatrix4x4);\n};\n\np5.cv.drawMat = function (sourceMat, x, y, width, height) {\n  let p5Image = p5.cv.matToNewImage(sourceMat);\n  if (!width) width = sourceMat.cols;\n  if (!height) height = sourceMat.rows;\n  image(p5Image, x, y, width, height);\n  p5Image = null;\n};\n\np5.cv.drawVectors = function (vectors, close = true) {\n  let numVectors = vectors.length;\n  let vector;\n  beginShape();\n  for (let i = 0; i < numVectors; i++) {\n    vector = vectors[i];\n    vertex(vector.x, vector.y);\n  }\n  if (close) {\n    vector = vectors[0];\n    vertex(vector.x, vector.y);\n  }\n  endShape();\n};\n\np5.cv.drawRotatedRect = function (rotatedRect) {\n  let center = rotatedRect.center;\n  let size = rotatedRect.size;\n  push();\n  translate(center.x, center.y);\n  rotate(radians(rotatedRect.angle));\n  rect(-size.width * 0.5, -size.height * 0.5, size.width, size.height);\n  pop();\n};\n\np5.cv.drawRotatedEllipse = function (rotatedEllipse) {\n  let center = rotatedEllipse.center;\n  let size = rotatedEllipse.size;\n  push();\n  translate(center.x, center.y);\n  rotate(radians(rotatedEllipse.angle));\n  // p5.js uses ellipseMode(CENTER) by default\n  ellipse(0, 0, size.width, size.height);\n  pop();\n};\n\np5.cv.findMaxLocation = function (sourceMat) {\n  return cv.minMaxLoc(sourceMat).maxLoc;\n};\n// TODO: test: especially Mat type and data access\np5.cv.meanCols = function (sourceMat) {\n  let colMat = new cv.Mat(sourceMat.cols, 1, cv.CV_32FC1);\n  for (let i = 0; i < sourceMat.cols; i++) {\n    colMat.row(i).data32F[0] = cv.mean(sourceMat.col(i))[0];\n  }\n  return colMat;\n};\n\np5.cv.meanRows = function (sourceMat) {\n  let rowMat = new cv.Mat(sourceMat.rows, 1, cv.CV_32FC1);\n  for (let i = 0; i < sourceMat.cols; i++) {\n    rowMat.row(i).data32F[0] = cv.mean(sourceMat.row(i))[0];\n  }\n  return colMat;\n};\n\np5.cv.sumCols = function (sourceMat) {\n  let colMat = new cv.Mat(sourceMat.cols, 1, CV_32FC1);\n  for (let i = 0; i < sourceMat.cols; i++) {\n    // FIXME: cv.sum does not exist -> will col(i).data always work ?\n    colMat.row(i).data32F[0] = sourceMat.col(i).data.reduce((a, b) => a + b);\n  }\n  return colMat;\n};\n\np5.cv.sumRows = function (sourceMat) {\n  let rowMat = new cv.Mat(sourceMat.rows, 1, CV_32FC1);\n  for (let i = 0; i < sourceMat.rows; i++) {\n    // FIXME: cv.sum does not exist -> will col(i).data always work ?\n    rowMat.row(i).data32F[0] = sourceMat.row(i).data.reduce((a, b) => a + b);\n  }\n  return rowMat;\n};\n\np5.cv.minCols = function (sourceMat) {\n  let colMat = new cv.Mat(sourceMat.cols, 1, CV_32FC1);\n  for (let i = 0; i < sourceMat.cols; i++) {\n    colMat.row(i).data32F[0] = minMaxLoc(mat.col(i)).minVal;\n  }\n  return colMat;\n};\n\np5.cv.minRows = function (sourceMat) {\n  let rowMat = new cv.Mat(sourceMat.rows, 1, cv.CV_32FC1);\n  for (let i = 0; i < sourceMat.cols; i++) {\n    rowMat.row(i).data32F[0] = minMaxLoc(mat.row(i)).minVal;\n  }\n  return colMat;\n};\n\np5.cv.maxCols = function (sourceMat) {\n  let colMat = new cv.Mat(sourceMat.cols, 1, CV_32FC1);\n  for (let i = 0; i < sourceMat.cols; i++) {\n    colMat.row(i).data32F[0] = minMaxLoc(mat.col(i)).maxVal;\n  }\n  return colMat;\n};\n\np5.cv.maxRows = function (sourceMat) {\n  let rowMat = new cv.Mat(sourceMat.rows, 1, cv.CV_32FC1);\n  for (let i = 0; i < sourceMat.cols; i++) {\n    rowMat.row(i).data32F[0] = minMaxLoc(mat.row(i)).maxVal;\n  }\n  return colMat;\n};\n\np5.cv.findFirst = function (sourceMat, target) {\n  for (let i = 0; i < sourceMat.rows; i++) {\n    if (sourceMat.charAt(i) === target) {\n      return i;\n    }\n  }\n  return 0;\n};\n\np5.cv.findLast = function (sourceMat, target) {\n  for (let i = sourceMat.rows - 1; i >= 0; i--) {\n    if (sourceMat.charAt(i) === target) {\n      return i;\n    }\n  }\n  return 0;\n};\n\np5.cv.getBoundingBox = function (sourceMat, thresh, invert) {\n  let flags = invert ? cv.THRESH_BINARY_INV : cv.THRESH_BINARY;\n  let box = new cv.Rect();\n  let rowMat = p5.cv.meanRows(sourceMat);\n  cv.threshold(rowMat, rowMat, thresh, 255, flags);\n  box.y = p5.cv.findFirst(rowMat, 255);\n  box.height = p5.cv.findLast(rowMat, 255);\n  box.height -= box.y;\n\n  let colMat = p5.cv.meanCols(mat);\n  cv.threshold(colMat, colMat, thresh, 255, flags);\n  box.x = findFirst(colMat, 255);\n  box.width = findLast(colMat, 255);\n  box.width -= box.x;\n  return box;\n};\n\n// TODO: after October\n// // (nearest point) to the two given lines\n// template <class T>\n// cv::Point3_<T> intersectLineLine(cv::Point3_<T> lineStart1, cv::Point3_<T> lineEnd1, cv::Point3_<T> lineStart2, cv::Point3_<T> lineEnd2) {\n//     cv::Point3_<T> v1(lineEnd1 - lineStart1), v2(lineEnd2 - lineStart2);\n//     T v1v1 = v1.dot(v1), v2v2 = v2.dot(v2), v1v2 = v1.dot(v2), v2v1 = v2.dot(v1);\n//     cv::Mat_<T> lambda = (1. / (v1v1 * v2v2 - v1v2 * v1v2))\n//     * ((cv::Mat_<T>(2, 2) << v2v2, v1v2, v2v1, v1v1)\n//          * (cv::Mat_<T>(2, 1) << v1.dot(lineStart2 - lineStart1), v2.dot(lineStart1 - lineStart2)));\n//     return (1./2) * ((lineStart1 + v1 * lambda(0)) + (lineStart2 + v2 * lambda(1)));\n// }\n\n// (nearest point on a line) to the given point\n// template <class T>\n// cv::Point3_<T> intersectPointLine(cv::Point3_<T> point, cv::Point3_<T> lineStart, cv::Point3_<T> lineEnd) {\n//     cv::Point3_<T> ray = lineEnd - lineStart;\n//     T u = (point - lineStart).dot(ray) / ray.dot(ray);\n//     return lineStart + u * ray;\n// }\n\n// // (nearest point on a ray) to the given point\n// template <class T>\n// cv::Point3_<T> intersectPointRay(cv::Point3_<T> point, cv::Point3_<T> ray) {\n//     return ray * (point.dot(ray) / ray.dot(ray));\n// }\n\n// morphological thinning, also called skeletonization, strangely missing from opencv\n// here is a description of the algorithm http://homepages.inf.ed.ac.uk/rbf/HIPR2/thin.htm\n// template <class T>\n// void thin(T& img) {\n//     cv::Mat mat = toCv(img);\n//     int w = mat.cols, h = mat.rows;\n//     int ia1=-w-1,ia2=-w-0,ia3=-w+1,ib1=-0-1,ib3=-0+1,ic1=+w-1,ic2=+w-0,ic3=+w+1;\n//     unsigned char* p = mat.ptr<unsigned char>();\n//     vector<unsigned int> q;\n//     for(int y = 1; y + 1 < h; y++) {\n//         for(int x = 1; x + 1 < w; x++) {\n//             int i = y * w + x;\n//             if(p[i]) {\n//                 q.push_back(i);\n//             }\n//         }\n//     }\n//     int n = q.size();\n//     for(int i=0;i<n;i++){int j=q[i];if(!p[j+ia1]&&!p[j+ia2]&&!p[j+ia3]&&p[j+ic1]&&p[j+ic2]&&p[j+ic3]){p[j]=0;}}\n//     for(int i=0;i<n;i++){int j=q[i];if(!p[j+ia3]&&!p[j+ib3]&&!p[j+ic3]&&p[j+ia1]&&p[j+ib1]&&p[j+ic1]){p[j]=0;}}\n//     for(int i=0;i<n;i++){int j=q[i];if(!p[j+ic1]&&!p[j+ic2]&&!p[j+ic3]&&p[j+ia1]&&p[j+ia2]&&p[j+ia3]){p[j]=0;}}\n//     for(int i=0;i<n;i++){int j=q[i];if(!p[j+ia1]&&!p[j+ib1]&&!p[j+ic1]&&p[j+ia3]&&p[j+ib3]&&p[j+ic3]){p[j]=0;}}\n//     for(int i=0;i<n;i++){int j=q[i];if(!p[j+ia2]&&!p[j+ia3]&&!p[j+ib3]&&p[j+ib1]&&p[j+ic2]){p[j]=0;}}\n//     for(int i=0;i<n;i++){int j=q[i];if(!p[j+ib3]&&!p[j+ic3]&&!p[j+ic2]&&p[j+ib1]&&p[j+ia2]){p[j]=0;}}\n//     for(int i=0;i<n;i++){int j=q[i];if(!p[j+ic2]&&!p[j+ic1]&&!p[j+ib1]&&p[j+ia2]&&p[j+ib3]){p[j]=0;}}\n//     for(int i=0;i<n;i++){int j=q[i];if(!p[j+ib1]&&!p[j+ia1]&&!p[j+ia2]&&p[j+ic2]&&p[j+ib3]){p[j]=0;}}\n// }\n// additionally: https://github.com/LingDong-/skeletonization-js\n\n// given a vector of lines, this function will find the average angle\np5.cv.weightedAverageAngle = function (linesMat) {\n  let angleSum = 0;\n  let weights = 0;\n  for (let i = 0; i < linesMat.rows; i++) {\n    let start = new cv.Point(\n      linesMat.data32S[i * 4],\n      linesMat.data32S[i * 4 + 1]\n    );\n    let end = new cv.Point(\n      linesMat.data32S[i * 4 + 2],\n      linesMat.data32S[i * 4 + 3]\n    );\n    let diff = p5.Vector.sub(end, start);\n    let length = diff.mag();\n    let weight = length * length;\n    let angle = atan2(diff.y, diff.x);\n    angleSum += angle * weight;\n    weights += weight;\n  }\n  return angleSum / weights;\n};\n\n// finds the average angle of hough lines, unrotates by that amount and\n// returns the average rotation. you can supply your own thresholded image\n// for hough lines, or let it run canny detection for you.\np5.cv.autorotate = function (\n  sourceMat,\n  destinationMat,\n  threshold1 = 50,\n  threshold2 = 200\n) {\n  let threshMat = new cv.Mat();\n  cv.Canny(sourceMat, threshMat, threshold1, threshold2);\n  return autorotate(sourceMat, threshMat, destinationMat);\n};\n\np5.cv.autorotate = function (sourceMat, threshMat, destinationMat) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  let lines = new cv.Mat();\n  let distanceResolution = 1.0;\n  // FIXME check if this is correct: used to be CV_PI\n  let angleResolution = PI / 180;\n  // these three values are just heuristics that have worked for me\n  let voteThreshold = 10;\n  let minLineLength = (srcMat.rows + srcMat.cols) / 8;\n  let maxLineGap = 3;\n  cv.HoughLinesP(\n    threshMat,\n    lines,\n    distanceResolution,\n    angleResolution,\n    voteThreshold,\n    minLineLength,\n    maxLineGap\n  );\n  let rotationAmount = ofRadToDeg(weightedAverageAngle(lines));\n  p5.cv.rotate(sourceMat, destinationMat, rotationAmount);\n  return rotationAmount;\n};\n\n// OCT ?\n// p5.cv.getConvexPolygon(convexHull, targetPoints) {\n//     let result = convexHull;\n\n//     const maxIterations = 16;\n//     const infinity = Number.POSITIVE_INFINITY;\n//     let minEpsilon = 0;\n//     let maxEpsilon = Number.POSITIVE_INFINITY;\n//     let curEpsilon = 16; // good initial guess\n\n//     // unbounded binary search to simplify the convex hull until it's targetPoints\n//     if(result.size() > targetPoints) {\n//         for(let i = 0; i < maxIterations; i++) {\n//             cv.approxPolyDP(Mat(convexHull), result, curEpsilon, true);\n//             if(result.size() === targetPoints) {\n//                 break;\n//             }\n//             if(result.size() > targetPoints) {\n//                 minEpsilon = curEpsilon;\n//                 if(maxEpsilon === infinity) {\n//                     curEpsilon = curEpsilon *  2;\n//                 } else {\n//                     curEpsilon = (maxEpsilon + minEpsilon) / 2;\n//                 }\n//             }\n//             if(result.size() < targetPoints) {\n//                 maxEpsilon = curEpsilon;\n//                 curEpsilon = (maxEpsilon + minEpsilon) / 2;\n//             }\n//         }\n//     }\n\n//     return result;\n// }\n\n// TODO: rename these to imageToCvMat / cvMatToImage\np5.cv.imageToNewMat = function (sourceImage) {\n  // TODO: args safety check\n  return cv.imread(sourceImage.canvas);\n};\n\np5.cv.imageToMat = function (sourceImage, cvMat) {\n  let sourceWidth = sourceImage.width;\n  let sourceHeight = sourceImage.height;\n  if (!p5.cv.getAllocated(cvMat)) {\n    p5.cv.allocate(cvMat, sourceWidth, sourceHeight, cv.CV_8UC4);\n  }\n  let data = sourceImage.canvas\n    .getContext('2d')\n    .getImageData(0, 0, sourceWidth, sourceHeight).data;\n  cvMat.data.set(data);\n};\n\np5.cv.getCvVideoCapture = function (p5Capture) {\n  return new cv.VideoCapture(p5Capture.elt);\n};\n\np5.cv.getRGBAMat = function (width, height) {\n  return new cv.Mat(height, width, cv.CV_8UC4);\n};\n\np5.cv.getGrayscaleMat = function (width, height) {\n  return new cv.Mat(height, width, cv.CV_8UC1);\n};\n\np5.cv.matToImage = function (sourceMat, destinationImage) {\n  // TODO: args safety check\n  cv.imshow(destinationImage.canvas, sourceMat);\n};\n\np5.cv.matToNewImage = function (sourceMat) {\n  let destinationImage = createImage(sourceMat.cols, sourceMat.rows);\n  cv.imshow(destinationImage.canvas, sourceMat);\n  return destinationImage;\n};\n\np5.cv.areSamesize = function (matA, matB) {\n  return matA.rows === matB.rows && matA.cols === matB.cols;\n};\n\ncv.Scalar.sub = function (a, b) {\n  return [a[0] - b[0], a[1] - b[1], a[2] - b[2], a[3] - b[3]];\n};\n\ncv.Scalar.add = function (a, b) {\n  return [a[0] + b[0], a[1] + b[1], a[2] + b[2], a[3] + b[3]];\n};\n\ncv.Point.sub = function (a, b) {\n  return new cv.Point(a.x - b.x, a.x - b.x);\n};\n\ncv.Point.add = function (a, b) {\n  return new cv.Point(a.x + b.x, a.x + b.x);\n};\n","// wrapThree are based on functions that operate on three Mat objects.\n// the first two are inputs, and the third is an output. for example,\n// the min() function: min(x, y, result) will calculate the per-element min\n// between x and y, and store that in result. both y and result need to\n// match x in dimensions and type. while wrapThree functions will use\n// imitate() to make sure your data is allocated correctly, you shouldn't\n// epect the function to behave properly if you haven't already allocated\n// your y argument. in general, OF images contain noise when newly allocated\n// so the result will also contain that noise.\n// #define wrapThree(name) \\\n// template <class X, class Y, class Result>\\\n// void name(X& x, Y& y, Result& result) {\\\n// imitate(y, x);\\\n// imitate(result, x);\\\n// cv::Mat xMat = toCv(x), yMat = toCv(y);\\\n// cv::Mat resultMat = toCv(result);\\\n// cv::name(xMat, yMat, resultMat);\\\n// }\n\n// wrapThree(max);\n// wrapThree(min);\n// wrapThree(multiply);\n// wrapThree(divide);\n// wrapThree(add);\n// wrapThree(subtract);\n// wrapThree(absdiff);\n// wrapThree(bitwise_and);\n// wrapThree(bitwise_or);\n// wrapThree(bitwise_xor);\n\n// Wrappers.h\np5.cv.invertTo = function (sourceMat, destinationMat) {\n  // TODO: args safety check\n  cv.bitwise_not(sourceMat, destinationMat);\n};\n// inverting non-floating point images is a just a bitwise not operation\np5.cv.invert = function (sourceMat) {\n  // TODO: args safety check\n  p5.cv.invertTo(sourceMat, sourceMat);\n};\n// also useful for taking the average/mixing two images\np5.cv.lerp = function (lerpFromMat, lerpToMat, lerpResult, amount) {\n  // TODO: args safety check (including constraining amount)\n  if (lerpToMat.cols === 0) {\n    lerpFromMat.copyTo(lerpResult);\n  } else if (lerpFromMat.cols === 0) {\n    lerpToMat.copyTo(lerpResult);\n  } else {\n    cv.addWeighted(\n      lerpFromMat,\n      amount,\n      lerpToMat,\n      1.0 - amount,\n      0.0,\n      lerpResult\n    );\n  }\n};\np5.cv.accumulate = function (newMat, accumulatorMat) {\n  // FIXME: handle type differences, currently assumes sourceMat and destinationMat are the same type\n  cv.add(newMat, accumulatorMat, accumulatorMat);\n};\np5.cv.accumulateWeighted = function (\n  newMat,\n  accumulatorMat,\n  alpha,\n  mask = null\n) {\n  // imageA = alpha*imageA + (1-alpha)*imageB;\n  p5.cv.lerp(accumulatorMat, newMat, accumulatorMat, alpha);\n};\n// normalize the min/max to [0, max for this type] out of place\np5.cv.normalizeTo = function (sourceMat, destinationMat) {\n  // TODO: args safety check\n  cv.normalize(\n    sourceMat,\n    destinationMat,\n    0,\n    p5.cv.getMaxValForMat(destinationMat),\n    cv.NORM_MINMAX\n  );\n};\n// TODO: test more\n// normalize the min/max to [0, max for this type] in place\np5.cv.normalize = function (sourceMat) {\n  // TODO: args safety check\n  p5.cv.normalizeTo(sourceMat, sourceMat);\n};\n// TODO: test if invert does anything\n// threshold out of place\np5.cv.thresholdTo = function (\n  sourceMat,\n  destinationMat,\n  thresholdValue,\n  invert = false\n) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  let thresholdType = invert ? cv.THRESH_BINARY_INV : cv.THRESH_BINARY;\n  let maxVal = p5.cv.getMaxValForMat(destinationMat);\n  // cv.threshold(sourceMat, destinationMat, thresholdValue, maxVal, thresholdType);\n  cv.threshold(\n    sourceMat,\n    destinationMat,\n    thresholdValue,\n    maxVal,\n    thresholdType\n  );\n};\n// threshold in place\np5.cv.threshold = function (sourceMat, thresholdValue, invert = false) {\n  p5.cv.thresholdTo(sourceMat, sourceMat, thresholdValue, invert);\n};\n// cache reusable point\np5.cv.MINUS_ONE_POINT = new cv.Point(-1, -1);\n// FIXME: load cv nicely and cache this\n// p5.cv.DEFAULT_KERNEL_MAT = new cv.Mat();\n// erode out of place\np5.cv.erodeTo = function (sourceMat, destinationMat, iterations = 1) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  cv.erode(\n    sourceMat,\n    destinationMat,\n    new cv.Mat(),\n    p5.cv.MINUS_ONE_POINT,\n    iterations\n  );\n};\n// erode in place\np5.cv.erode = function (sourceMat, iterations = 1) {\n  p5.cv.erodeTo(sourceMat, sourceMat, iterations);\n};\n\n// dilate out of place\np5.cv.dilateTo = function (sourceMat, destinationMat, iterations = 1) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  cv.dilate(\n    sourceMat,\n    destinationMat,\n    new cv.Mat(),\n    p5.cv.MINUS_ONE_POINT,\n    iterations\n  );\n};\n\n// dilate in place\np5.cv.dilate = function (sourceMat, iterations = 1) {\n  p5.cv.dilateTo(sourceMat, sourceMat, iterations);\n};\n\n// automatic threshold (grayscale 8-bit only) out of place\np5.cv.autothresholdTo = function (sourceMat, destinationMat, invert = false) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  let flags =\n    cv.THRESH_OTSU | (invert ? cv.THRESH_BINARY_INV : cv.THRESH_BINARY);\n  cv.threshold(sourceMat, destinationMat, 0, 255, flags);\n};\n\n// automatic threshold (grayscale 8-bit only) in place\np5.cv.autothreshold = function (sourceMat, invert = false) {\n  p5.cv.autothresholdTo(sourceMat, sourceMat, invert);\n};\n\n// CV_RGB2GRAY, CV_HSV2RGB, etc. with [RGB, BGR, GRAY, HSV, HLS, XYZ, YCrCb, Lab, Luv]\n// you can convert whole images...\np5.cv.convertColor = function (sourceMat, destinationMat, code) {\n  // cvtColor allocates Mat for you, but we need this to handle ofImage etc.\n  let targetChannels = p5.cv.getTargetChannelsFromCode(code);\n  p5.cv.imitate(\n    destinationMat,\n    sourceMat,\n    p5.cv.getCvImageType(targetChannels, p5.cv.getDepthForMat(sourceMat))\n  );\n  cv.cvtColor(sourceMat, destinationMat, code);\n};\n// ...or single colors.\n// TODO: ask Golan about a decent way to tackle this.\n// return color (but have it clamped to 0-255) ?\n// test under different colorMode options\n// !!!!note it converts RGB, not RGB\np5.cv.convertSingleColor = function (p5Color, code) {\n  let mat = cv.Mat.zeros(1, 1, cv.CV_8UC3);\n  // TODO: check if array.length < 4, if fill in the blanks\n  let levels;\n  if (p5Color instanceof p5.Color) {\n    levels = p5Color.levels;\n  } else if (p5Color instanceof Array) {\n    levels = p5Color;\n  } else {\n    console.warn('unsupported format');\n    return mat.data;\n  }\n\n  mat.data[0] = levels[0];\n  mat.data[1] = levels[1];\n  mat.data[2] = levels[2];\n\n  cv.cvtColor(mat, mat, code);\n  let data = Array.from(mat.data);\n  // add alpha back in\n  data.push(levels[4]);\n  return data;\n};\n\n// a common cv task is to convert something to grayscale. this function will\n// do that quickly for RGBA, RGB, and 1-channel images.\np5.cv.copyGray = function (sourceMat, destinationMat) {\n  let channels = p5.cv.getChannelsForMat(sourceMat);\n  if (channels === 4) {\n    p5.cv.convertColor(sourceMat, destinationMat, cv.COLOR_RGBA2GRAY);\n  } else if (channels === 3) {\n    p5.cv.convertColor(sourceMat, destinationMat, cv.COLOR_RGB2GRAY);\n  } else if (channels === 1) {\n    sourceMat.copyTo(destinationMat);\n  }\n};\n\np5.cv.forceOdd = function (x) {\n  return Math.floor(x / 2) * 2 + 1;\n};\n\n// box blur\np5.cv.blurTo = function (sourceMat, destinationMat, size) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  size = p5.cv.forceOdd(size);\n  cv.blur(sourceMat, destinationMat, new cv.Size(size, size));\n};\n// in-place box blur\np5.cv.blur = function (sourceMat, size) {\n  p5.cv.blurTo(sourceMat, sourceMat, size);\n};\n\n// Gaussian blur\np5.cv.GaussianBlurTo = function (sourceMat, destinationMat, size) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  size = p5.cv.forceOdd(size);\n  cv.GaussianBlur(sourceMat, destinationMat, new cv.Size(size, size), 0, 0);\n};\n\n// in-place Gaussian blur\np5.cv.GaussianBlur = function (sourceMat, size) {\n  p5.cv.GaussianBlurTo(sourceMat, sourceMat, size);\n};\n\n// Median blur\np5.cv.medianBlurTo = function (sourceMat, destinationMat, size) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  size = p5.cv.forceOdd(size);\n  cv.medianBlur(sourceMat, destinationMat, size);\n};\n\n// in-place Median blur\np5.cv.medianBlur = function (sourceMat, size) {\n  p5.cv.medianBlurTo(sourceMat, sourceMat, size);\n};\n\n// histogram equalization, adds support for color images\np5.cv.equalizeHistTo = function (sourceMat, destinationMat) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  if (sourceMat.channels() > 1) {\n    let sourceChannels = new cv.MatVector();\n    let destinationChannels = new cv.MatVector();\n    split(sourceMat, sourceChannels);\n    split(destinationMat, destinationChannels);\n    for (let i = 0; i < sourceChannels.size(); i++) {\n      cv.equalizeHist(sourceChannels.get(i), destinationChannels.get(i));\n    }\n    cv.merge(destinationChannels, destinationChannels);\n  } else {\n    cv.equalizeHist(sourceMat, destinationMat);\n  }\n};\n\np5.cv.equalizeHist = function (sourceMat) {\n  p5.cv.equalizeHistTo(sourceMat, sourceMat);\n};\n\n// Canny edge detection assumes your input and output are grayscale 8-bit\n// example thresholds might be 0,30 or 50,200\n// TODO: ask Golan if there's a reason to add an in-place version\np5.cv.Canny = function (\n  sourceMat,\n  destinationMat,\n  threshold1,\n  threshold2,\n  apertureSize = 3,\n  L2gradient = false\n) {\n  p5.cv.imitate(destinationMat, sourceMat, cv.CV_8UC1);\n  cv.Canny(\n    sourceMat,\n    destinationMat,\n    threshold1,\n    threshold2,\n    apertureSize,\n    L2gradient\n  );\n};\n\n// Sobel edge detection\np5.cv.Sobel = function (\n  sourceMat,\n  destinationMat,\n  ddepth = -1,\n  dx = 1,\n  dy = 1,\n  ksize = 3,\n  scale = 1,\n  delta = 0,\n  borderType = cv.BORDER_DEFAULT\n) {\n  p5.cv.imitate(destinationMat, sourceMat, cv.CV_8UC1);\n  cv.Sobel(\n    sourceMat,\n    destinationMat,\n    ddepth,\n    dx,\n    dy,\n    ksize,\n    scale,\n    delta,\n    borderType\n  );\n};\n// CLD missing at the moment\n\n// TODO: test ! test ! test!\n// dst does not imitate src\np5.cv.warpPerspective = function (\n  sourceMat,\n  destinationMat,\n  destinationPoints,\n  flags = cv.INTER_LINEAR\n) {\n  if (destinationPoints.type() !== cv.CV_32FC2) {\n    destinationPoints.convertTo(destinationPoints, cv.CV_32FC2);\n  }\n  // TODO validate args !!!\n  let w = sourceMat.cols;\n  let h = sourceMat.rows;\n  let sourcePoints = cv.matFromArray(4, 1, cv.CV_32FC2, [\n    0,\n    0,\n    w,\n    0,\n    w,\n    h,\n    0,\n    h,\n  ]);\n  if (destinationPoints instanceof Array) {\n    // FIXME: maybe convert this from [x1,y1,x2,y2,x3,y3...] to [{x:0,y:0}...] or [p5.Vector(),...]\n    destinationPoints = cv.matFromArray(4, 1, cv.CV_32FC2, destinationPoints);\n  }\n  let transform = cv.getPerspectiveTransform(sourcePoints, destinationPoints);\n  cv.warpPerspective(\n    sourceMat,\n    destinationMat,\n    transform,\n    destinationMat.size(),\n    flags\n  );\n};\n// dst does not imitate src\np5.cv.unwarpPerspective = function (\n  sourceMat,\n  destinationMat,\n  sourcePoints,\n  flags = cv.INTER_LINEAR\n) {\n  if (sourcePoints.type() !== cv.CV_32FC2) {\n    sourcePoints.convertTo(sourcePoints, cv.CV_32FC2);\n  }\n  let w = destinationMat.cols;\n  let h = destinationMat.rows;\n  let destinationPoints = cv.matFromArray(4, 1, cv.CV_32FC2, [\n    0,\n    0,\n    w,\n    0,\n    w,\n    h,\n    0,\n    h,\n  ]);\n\n  let transform = cv.getPerspectiveTransform(sourcePoints, destinationPoints);\n  cv.warpPerspective(\n    sourceMat,\n    destinationMat,\n    transform,\n    destinationMat.size(),\n    flags\n  );\n};\n\n// dst does not imitate src\np5.cv.warpPerspectiveFromTranform = function (\n  sourceMat,\n  destinationMat,\n  transform,\n  flags = cv.INTER_LINEAR\n) {\n  cv.warpPerspective(\n    sourceMat,\n    destinationMat,\n    transform,\n    destinationMat.size(),\n    flags\n  );\n};\n\n// also: INTER_NEAREST, INTER_AREA, INTER_CUBIC, INTER_LANCZOS4\np5.cv.resizeTo = function (\n  sourceMat,\n  destinationMat,\n  interpolation = cv.INTER_LINEAR\n) {\n  // TODO: validation args (especially destination Mat (e.g. width !=== 0, height !=== 0))\n  cv.resize(\n    sourceMat,\n    destinationMat,\n    destinationMat.size(),\n    0,\n    0,\n    interpolation\n  );\n};\n\n// also: INTER_NEAREST, INTER_AREA, INTER_CUBIC, INTER_LANCZOS4\np5.cv.resizeToScale = function (\n  sourceMat,\n  destinationMat,\n  xScale,\n  yScale,\n  interpolation = cv.INTER_LINEAR\n) {\n  let dstWidth = Math.floor(p5.cv.getWidth(sourceMat) * xScale),\n    dstHeight = Math.floor(p5.cv.getHeight(sourceMat) * yScale);\n  if (\n    p5.cv.getWidth(destinationMat) !== dstWidth ||\n    p5.cv.getHeight(destinationMat) !== dstHeight\n  ) {\n    p5.cv.allocate(\n      destinationMat,\n      dstWidth,\n      dstHeight,\n      p5.cv.getCvImageType(sourceMat)\n    );\n  }\n  cv.resize(\n    sourceMat,\n    destinationMat,\n    { width: dstWidth, height: dstHeight },\n    interpolation\n  );\n};\n\np5.cv.resizeToDimensions = function (\n  sourceMat,\n  destinationMat,\n  dstWidth,\n  dstHeight,\n  interpolation = cv.INTER_LINEAR\n) {\n  if (\n    p5.cv.getWidth(destinationMat) !== dstWidth ||\n    p5.cv.getHeight(destinationMat) !== dstHeight\n  ) {\n    p5.cv.allocate(\n      destinationMat,\n      dstWidth,\n      dstHeight,\n      p5.cv.getCvImageType(sourceMat)\n    );\n  }\n  cv.resize(\n    sourceMat,\n    destinationMat,\n    { width: dstWidth, height: dstHeight },\n    interpolation\n  );\n};\n\np5.cv.cvPointsToJS = function (mat) {\n  let result = [];\n  for (let i = 0; i < mat.rows; i++) {\n    result.push({ x: mat.data32S[i * 2], y: mat.data32S[i * 2 + 1] });\n  }\n  return result;\n};\n\np5.cv.drawContour = function (mat, close = true) {\n  beginShape();\n  for (let i = 0; i < mat.rows; i++) {\n    vertex(mat.data32S[i * 2], mat.data32S[i * 2 + 1]);\n  }\n  if (close) {\n    vertex(mat.data32S[0], mat.data32S[1]);\n  }\n  endShape();\n};\n\np5.cv.cvPointsToVectors = function (mat) {\n  let result = [];\n  for (let i = 0; i < mat.rows; i++) {\n    result.push(createVector(mat.data32S[i * 2], mat.data32S[i * 2 + 1]));\n  }\n  return result;\n};\n\np5.cv.cvFeaturesToPoints = function (mat) {\n  let result = [];\n  for (let i = 0; i < mat.rows; i++) {\n    result.push({ x: mat.data32F[i * 2], y: mat.data32F[i * 2 + 1] });\n  }\n  return result;\n};\n\np5.cv.getFeatureAsPoint = function (mat, index) {\n  return { x: mat.data32F[index * 2], y: mat.data32F[index * 2 + 1] };\n};\n\np5.cv.cvLineToJS = function (mat) {\n  let result = [];\n  for (let i = 0; i < mat.rows; i++) {\n    result.push({ x: mat.data32F[i * 2], y: mat.data32F[i * 2 + 1] });\n  }\n  return result;\n};\n\np5.cv.cvLineToVectors = function (mat) {\n  let result = [];\n  for (let i = 0; i < mat.rows; i++) {\n    result.push(createVector(mat.data32F[i * 2], mat.data32F[i * 2 + 1]));\n  }\n  return result;\n};\n\np5.cv.getConvexHullMat = function (contourMat) {\n  let hull = new cv.Mat();\n  cv.convexHull(contourMat, hull);\n  return hull;\n};\n\np5.cv.convexHullFromMat = function (contourMat) {\n  return p5.cv.cvPointsToJS(p5.cv.getConvexHullMat(contourMat));\n};\n\np5.cv.convexHull = function (vectors) {\n  let contour = p5.cv.vectorsToCvContour(vectors);\n  return p5.cv.convexHullFromMat(contour);\n};\n\np5.cv.convexityDefectsCv = function (contourMat) {\n  let hull = new cv.Mat();\n  let defects = new cv.Mat();\n  cv.convexHull(contourMat, hull, false, false);\n  cv.convexityDefects(contourMat, hull, defects);\n  return defects;\n};\n\np5.cv.convexityDefectsFromVectors = function (vectors) {\n  return p5.cv.cvPointsToVectors(\n    p5.cv.convexityDefectsCv(p5.cv.vectorsToCvContour(vectors))\n  );\n};\n\np5.cv.minAreaRectFromVectors = function (vectors) {\n  return cv.minAreaRect(p5.cv.vectorsToCvContour(vectors));\n};\n\np5.cv.fitEllipseFromVectors = function (vectors) {\n  return cv.fitEllipse(p5.cv.vectorsToCvContour(vectors));\n};\n// TODO: test more, fix as needed\np5.cv.fitLineFromVectors = function (vectors, height) {\n  let line = new cv.Mat();\n  cv.fitLine(\n    p5.cv.vectorsToCvContour(vectors),\n    line,\n    cv.DIST_L2,\n    0,\n    0.01,\n    0.01\n  );\n  // return p5.cv.cvLineToVectors(line);\n  // if(frameCount === 75){\n  //   console.log(line);\n  // }\n\n  let vx = line.data32F[0];\n  let vy = line.data32F[1];\n  let x = line.data32F[2];\n  let y = line.data32F[3];\n  let lefty = Math.round((-x * vy) / vx + y);\n  let righty = Math.round(((height - x) * vy) / vx + y);\n  let point1 = createVector(height - 1, righty);\n  let point2 = createVector(0, lefty);\n  return [point1, point2];\n};\n\n// TODO: test\n// kind of obscure function, draws filled polygons on the CPU\np5.cv.fillPoly = function (points, destinationMat) {\n  let numPoints = [points.length];\n  destinationMat.setTo(p5.cv.ZERO_SCALAR);\n  cv.fillPoly(destinationMat, points, numPoints, 1, [255, 255, 255, 255]);\n};\n\np5.cv.FLIP_HORIZONTAL = 1;\np5.cv.FLIP_VERTICAL = 0;\np5.cv.FLIP_BOTH = -1;\n\np5.cv.flipTo = function (sourceMat, destinationMat, code) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  cv.flip(sourceMat, destinationMat, code);\n};\n\np5.cv.flip = function (sourceMat, code) {\n  p5.cv.flipTo(sourceMat, sourceMat, code);\n};\n\n// if you're doing the same rotation multiple times, it's better to precompute\n// the displacement and use remap.\np5.cv.rotateTo = function (\n  sourceMat,\n  destinationMat,\n  angle,\n  fill = [0, 0, 0, 255],\n  interpolation = cv.INTER_LINEAR\n) {\n  p5.cv.imitate(destinationMat, sourceMat);\n  let center = new cv.Point(\n    Math.floor(sourceMat.cols * 0.5),\n    Math.floor(sourceMat.rows * 0.5)\n  );\n  let rotationMatrix = cv.getRotationMatrix2D(center, angle, 1);\n  cv.warpAffine(\n    sourceMat,\n    destinationMat,\n    rotationMatrix,\n    sourceMat.size(),\n    interpolation,\n    cv.BORDER_CONSTANT,\n    fill\n  );\n};\n\np5.cv.rotate = function (\n  sourceMat,\n  angle,\n  fill = [0, 0, 0, 255],\n  interpolation = cv.INTER_LINEAR\n) {\n  p5.cv.rotateTo(sourceMat, sourceMat, angle, fill, interpolation);\n};\n\n// efficient version of rotate that only operates on 0, 90, 180, 270 degrees\n// the output is allocated to contain all pixels of the input.\n// TODO: check if allocate calls are actually required!!!\np5.cv.rotate90To = function (sourceMat, destinationMat, angle) {\n  if (angle === 0) {\n    sourceMat.copyTo(destinationMat);\n  } else if (angle === 90) {\n    // p5.cv.allocate(destinationMat, sourceMat.rows, sourceMat.cols, sourceMat.type());\n    cv.transpose(sourceMat, destinationMat);\n    cv.flip(sourceMat, destinationMat, p5.cv.FLIP_HORIZONTAL);\n  } else if (angle === 180) {\n    p5.cv.imitate(destinationMat, sourceMat);\n    cv.flip(sourceMat, destinationMat, p5.cv.FLIP_BOTH);\n  } else if (angle === 270) {\n    // p5.cv.allocate(destinationMat, sourceMat.rows, sourceMat.cols, sourceMat.type());\n    cv.transpose(sourceMat, destinationMat);\n    // cv.flip(sourceMat, destinationMat, p5.cv.FLIP_VERTICAL);\n  }\n};\n\np5.cv.rotate90 = function (sourceMat, angle) {\n  p5.cv.rotate90To(sourceMat, sourceMat, angle);\n};\n\np5.cv.transposeTo = function (sourceMat, destinationMat) {\n  //p5.cv.allocate(destinationMat, sourceMat.rows, sourceMat.cols, sourceMat.type());\n  cv.transpose(sourceMat, destinationMat);\n};\n\np5.cv.transpose = function (sourceMat) {\n  p5.cv.transposeTo(sourceMat, sourceMat);\n};\n\np5.cv.swap = function (a, b) {\n  let temp = a.clone();\n  b.copyTo(a);\n  temp.copyTo(b);\n  temp.delete();\n};\n","p5.cv.trackingDistanceRect = function (a, b) {\n  let dx = a.x + a.width * 0.5 - (b.x + b.width * 0.5);\n  let dy = a.y + a.height * 0.5 - (b.y + b.height * 0.5);\n  let dw = a.width - b.width;\n  let dh = a.height - b.height;\n  let pd = Math.sqrt(dx * dx + dy * dy);\n  let sd = Math.sqrt(dw * dw + dh * dh);\n  return pd + sd;\n};\n\np5.cv.trackingDistancePoint = function (a, b) {\n  return dist(a.x, a.y, b.x, b.y);\n};\n\np5.cv.isPoint = function (pt) {\n  return 'x' in pt && 'y' in pt && !('width' in pt);\n};\n\np5.cv.isRect = function (pt) {\n  return 'x' in pt && 'y' in pt && 'width' in pt && 'height' in pt;\n};\n\np5.cv.trackingDistance = function (a, b) {\n  if (p5.cv.isPoint(a) && p5.cv.isPoint(b)) {\n    return p5.cv.trackingDistancePoint(a, b);\n  }\n  if (p5.cv.isRect(a) && p5.cv.isRect(b)) {\n    return p5.cv.trackingDistanceRect(a, b);\n  }\n  console.warn(\n    'invalid input: currently supporting only points(e.g. {x:0,y:0}) and rectangles({x:0,y:0,width:10,height:10})'\n  );\n  return -1;\n};\n\nclass TrackedObject {\n  initFromObject(object, label, index) {\n    this.lastSeen = 0;\n    this.label = label;\n    this.age = 0;\n    this.index = index;\n    this.object = object;\n    return this;\n  }\n\n  initFromPreviousObject(object, previous, index) {\n    this.lastSeen = 0;\n    this.label = previous.label;\n    this.age = previous.age;\n    this.index = index;\n    this.object = object;\n    return this;\n  }\n\n  copyFrom(old) {\n    this.lastSeen = old.lastSeen;\n    this.label = old.label;\n    this.age = old.age;\n    this.index = -1;\n    this.object = old.object;\n    return this;\n  }\n\n  timeStep(visible) {\n    this.age++;\n    if (!visible) {\n      this.lastSeen++;\n    }\n  }\n\n  getLastSeen() {\n    return this.lastSeen;\n  }\n\n  getAge() {\n    return this.age;\n  }\n\n  getLabel() {\n    return this.label;\n  }\n\n  getIndex() {\n    return this.index;\n  }\n}\n\nclass Tracker {\n  constructor() {\n    this.previous = [];\n    this.current = [];\n    this.currentLabels = [];\n    this.previousLabels = [];\n    this.newLabels = [];\n    this.deadLabels = [];\n\n    this.previousLabelMap = new Map();\n    this.currentLabelMap = new Map();\n\n    this.persistence = 15;\n    this.curLabel = 0;\n\n    this.maximumDistance = 64;\n  }\n\n  getNewLabel() {\n    return this.curLabel++;\n  }\n\n  setPersistance(persistance) {\n    this.persistance = persistance;\n  }\n\n  setMaximumDistance(maximumDistance) {\n    this.maximumDistance = maximumDistance;\n  }\n\n  sortByDistance(a, b) {\n    if (a.distance > b.distance) return 1;\n    if (a.distance < b.distance) return -1;\n    return 0;\n  }\n\n  track(objects) {\n    // TODO: check if this is mean to update reference or copy values\n    // this.previous = this.current;\n    this.previous = [].concat(this.current);\n\n    let n = objects.length;\n    let m = this.previous.length;\n\n    // matchPair = {index1:index2};\n    // matchDistancePair = {pair: matchPair, distance: dist}\n    let all = [];\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < m; j++) {\n        let curDistance = p5.cv.trackingDistance(\n          objects[i],\n          this.previous[j].object\n        );\n        if (curDistance < this.maximumDistance) {\n          all.push({ pair: [i, j], distance: curDistance });\n        }\n      }\n    }\n\n    all.sort(this.sortByDistance);\n\n    // previousLabels = currentLabels;\n    this.previousLabels = [].concat(this.currentLabels);\n    this.currentLabels = new Array(n);\n    this.current.length = 0;\n\n    let matchedObjects = new Array(n).fill(false);\n    let matchedPrevious = new Array(m).fill(false);\n    // walk through matches in order\n    let allSize = all.length;\n    for (let k = 0; k < allSize; k++) {\n      let match = all[k].pair;\n      let i = match[0];\n      let j = match[1];\n      // only use match if both objects are unmatched, lastSeen is set to 0\n      if (!matchedObjects[i] && !matchedPrevious[j]) {\n        matchedObjects[i] = true;\n        matchedPrevious[j] = true;\n        let index = this.current.length;\n        let newFromPrevious = new TrackedObject().initFromPreviousObject(\n          objects[i],\n          this.previous[j],\n          index\n        );\n        this.current.push(newFromPrevious);\n        newFromPrevious.timeStep(true);\n        this.currentLabels[i] = newFromPrevious.getLabel();\n      }\n    }\n\n    // create new labels for new unmatched objects, lastSeen is set to 0\n    this.newLabels.length = 0;\n    for (let i = 0; i < n; i++) {\n      if (!matchedObjects[i]) {\n        let curLabel = this.getNewLabel();\n        let index = this.current.length;\n        let newWithLabel = new TrackedObject().initFromObject(\n          objects[i],\n          curLabel,\n          index\n        );\n        this.current.push(newWithLabel);\n        newWithLabel.timeStep(true);\n        this.currentLabels[i] = curLabel;\n        this.newLabels.push(curLabel);\n      }\n    }\n\n    // copy old unmatched objects if young enough, lastSeen is increased\n    this.deadLabels.length = 0;\n    for (let j = 0; j < m; j++) {\n      if (!matchedPrevious[j]) {\n        if (this.previous[j].getLastSeen() < this.persistence) {\n          this.current.push(this.previous[j]);\n          this.current[this.current.length - 1].timeStep(false);\n        }\n        this.deadLabels.push(this.previous[j].getLabel());\n      }\n    }\n\n    // build label maps\n    this.currentLabelMap.clear();\n    let currentSize = this.current.length;\n    for (let i = 0; i < currentSize; i++) {\n      let label = this.current[i].getLabel();\n      this.currentLabelMap.set(label, this.current[i]);\n    }\n    this.previousLabelMap.clear();\n    let previousSize = this.previous.length;\n    for (let i = 0; i < previousSize; i++) {\n      let label = this.previous[i].getLabel();\n      this.previousLabelMap.set(label, this.previous[i]);\n    }\n\n    return this.currentLabels;\n  }\n\n  getCurrentLabels() {\n    return this.currentLabels;\n  }\n\n  getPreviousLabels() {\n    return this.previousLabels;\n  }\n\n  getNewLabels() {\n    return this.newLabels;\n  }\n\n  getDeadLabels() {\n    return this.deadLabels;\n  }\n  getLabelFromIndex(i) {\n    return this.currentLabels[i];\n  }\n  // TODO: test with invalid label\n  getIndexFromLabel(label) {\n    if (this.currentLabelMap.has(label)) {\n      return this.currentLabelMap.get(label).getIndex();\n    }\n    console.warn('label', label, 'not found');\n  }\n  getPrevious(label) {\n    // return previousLabelMap.find(label)->second->object;\n    if (this.previousLabelMap.has(label)) {\n      return this.previousLabelMap.get(label).object;\n    }\n    console.warn('label', label, 'not found');\n  }\n  getCurrent(label) {\n    if (this.currentLabelMap.has(label)) {\n      return this.currentLabelMap.get(label).object;\n    }\n    console.warn('label', label, 'not found');\n  }\n  existsCurrent(label) {\n    return this.currentLabelMap.has(label);\n  }\n  existsPrevious(label) {\n    return this.previousLabelMap.has(label);\n  }\n  getAge(label) {\n    if (this.currentLabelMap.has(label)) {\n      return this.currentLabelMap.get(label).getAge();\n    }\n    console.warn('label', label, 'not found');\n  }\n  getLastSeen(label) {\n    if (this.currentLabelMap.has(label)) {\n      return this.currentLabelMap.get(label).getLastSeen();\n    }\n    console.warn('label', label, 'not found');\n  }\n}\n\nclass RectTracker extends Tracker {\n  constructor() {\n    super();\n    this.smoothingRate = 0.5;\n    // std::map<unsigned int, cv::Rect> smoothed;\n    this.smoothed = new Map();\n  }\n\n  setSmoothingRate(smoothingRate) {\n    this.smoothingRate = smoothingRate;\n  }\n  getSmoothingRate() {\n    return this.smoothingRate;\n  }\n\n  track(objects) {\n    let labels = super.track(objects);\n    // add new objects, update old objects\n    let labelsSize = labels.length;\n    for (let i = 0; i < labelsSize; i++) {\n      let label = labels[i];\n      let cur = this.getCurrent(label);\n      if (this.smoothed.has(label)) {\n        let smooth = this.smoothed.get(label);\n        smooth.x = lerp(smooth.x, cur.x, smoothingRate);\n        smooth.y = lerp(smooth.y, cur.y, smoothingRate);\n        smooth.width = lerp(smooth.width, cur.width, smoothingRate);\n        smooth.height = lerp(smooth.height, cur.height, smoothingRate);\n      } else {\n        this.smoothed[label] = cur;\n      }\n    }\n    // TODO: check if this is legit both global and instance p5.js modes\n    for (const [label, trackedRect] of this.smoothed.entries()) {\n      if (!this.existsCurrent(label)) {\n        this.smoothed.delete(label);\n        trackedRect; //eslint :/\n      }\n    }\n\n    return labels;\n  }\n\n  getSmoothed(label) {\n    if (this.smoothed.has(label)) {\n      return this.smoothed.get(label);\n    }\n    console.warn('label', label, 'not found');\n  }\n\n  getVelocity(i) {\n    let label = this.getLabelFromIndex(i);\n    // TODO: validate / handle i not found\n    if (this.existsPrevious(label)) {\n      let previous = this.getPrevious(label);\n      let current = this.getCurrent(label);\n      // TODO: check if this works: it's more readable, but looks like it could swallow memory over time\n      let previousPosition = createVector(\n        previous.x + previous.width * 0.5,\n        previous.y + previous.height * 0.5\n      );\n      let currentPosition = createVector(\n        current.x + current.width * 0.5,\n        current.y + current.height * 0.5\n      );\n      return p5.Vector.sub(currentPosition, previousPosition);\n    } else {\n      return createVector();\n    }\n  }\n}\n\n//   typedef Tracker<cv::Point2f> PointTracker;\nclass PointTracker extends Tracker {\n  constructor() {\n    super();\n  }\n}\n\nclass Follower {\n  constructor() {\n    this.dead = false;\n    this.label = 0;\n  }\n\n  setup(track) {}\n  update(track) {}\n  kill() {\n    this.dead = true;\n  }\n\n  setLabel(label) {\n    this.label = label;\n  }\n  getLabel() {\n    return this.label;\n  }\n  getDead() {\n    return this.dead;\n  }\n}\n\n// typedef Follower<cv::Rect> RectFollower;\n// typedef Follower<cv::Point2f> PointFollower;\nclass RectFollower extends Follower {\n  constructor() {\n    super();\n  }\n}\n\nclass PointFollower extends Follower {\n  constructor() {\n    super();\n  }\n}\n// FIXME: figure out the best way to handle RectTracker/PointTracker\nclass TrackerFollower extends Tracker {\n  constructor() {\n    super();\n    this.labels = [];\n    this.followers = [];\n  }\n\n  track(objects) {\n    // will this handle all types ?\n    super.track(objects);\n    // kill missing, update old\n    let labelsSize = this.labels.length;\n    for (let i = 0; i < labelsSize; i++) {\n      let curLabel = this.labels[i];\n      let curFollower = this.followers[i];\n      if (!this.existsCurrent(curLabel)) {\n        curFollower.kill();\n      } else {\n        curFollower.update(this.getCurrent(curLabel));\n      }\n    }\n    // add new\n    let newLabelsSize = this.newLabels.length;\n    for (let i = 0; i < newLabelsSize; i++) {\n      let curLabel = this.newLabels[i];\n      this.labels.push(curLabel);\n      let newFollower = new Follower();\n      this.followers.push(newFollower);\n      newFollower.setup(this.getCurrent(curLabel));\n      newFollower.setLabel(curLabel);\n    }\n    // remove dead\n    labelsSize = this.labels.length;\n    for (let i = labelsSize - 1; i >= 0; i--) {\n      if (this.followers[i].getDead()) {\n        this.followers.splice(i, 1);\n        this.labels.splice(i, 1);\n      }\n    }\n    return this.labels;\n  }\n\n  getFollowers() {\n    return this.followers;\n  }\n}\n\n// template <class F> class RectTrackerFollower : public TrackerFollower<cv::Rect, F> {};\n// template <class F> class PointTrackerFollower : public TrackerFollower<cv::Point2f, F> {};\nclass RectTrackerFollower extends TrackerFollower {\n  constructor() {\n    super();\n  }\n}\nclass PointTrackerFollower extends TrackerFollower {\n  constructor() {\n    super();\n  }\n}\n\nexport {\n  TrackedObject,\n  Tracker,\n  PointTracker,\n  RectTracker,\n  Follower,\n  RectFollower,\n  PointFollower,\n  TrackerFollower,\n  RectTrackerFollower,\n  PointTrackerFollower,\n};\n","const DifferenceMode = { ABSDIFF: 0, BRIGHTER: 1, DARKER: 2 };\n\nclass RunningBackground {\n  constructor(width, height) {\n    this.learningRate = 0.0001;\n    this.learningTime = 900.0;\n    this.useLearningTime = false;\n    this.thresholdValue = 26;\n    this.ignoreForeground = false;\n    this.needToReset = false;\n    this.differenceMode = DifferenceMode.ABSDIFF;\n    this.accumulator = new cv.Mat();\n    this.background = cv.Mat.zeros(height, width, cv.CV_32F);\n    this.foreground = cv.Mat.zeros(height, width, cv.CV_32F);\n    this.foregroundGray = cv.Mat.zeros(height, width, cv.CV_32F);\n  }\n\n  update(frame, thresholded) {\n    if (this.needToReset || this.accumulator.empty()) {\n      this.needToReset = false;\n      // frame.convertTo(this.accumulator, cv.CV_32F);\n      frame.copyTo(this.accumulator);\n    }\n\n    this.accumulator.convertTo(this.background, cv.CV_8U);\n    switch (this.differenceMode) {\n      case DifferenceMode.ABSDIFF:\n        cv.absdiff(this.background, frame, this.foreground);\n        break;\n      case DifferenceMode.BRIGHTER:\n        cv.subtract(frame, this.background, this.foreground);\n        break;\n      case DifferenceMode.DARKER:\n        cv.subtract(this.background, frame, this.foreground);\n        break;\n    }\n\n    p5.cv.copyGray(this.foreground, this.foregroundGray);\n    let thresholdMode = this.ignoreForeground\n      ? cv.THRESH_BINARY_INV\n      : cv.THRESH_BINARY;\n    cv.threshold(\n      this.foregroundGray,\n      thresholded,\n      this.thresholdValue,\n      255,\n      thresholdMode\n    );\n    // FIXME is this needed ?\n    let curLearningRate = float(this.learningRate);\n    if (this.useLearningTime) {\n      // FIXME: this needs more love\n      curLearningRate = pow(\n        1 - this.thresholdValue / 255,\n        1 / float(this.learningRate)\n      );\n    }\n    if (this.ignoreForeground) {\n      //   TODO: finish this: add mask\n      p5.cv.accumulateWeighted(frame, this.accumulator, curLearningRate);\n      // cv.bitwise_not(this.thresholded, this.thresholded);\n    } else {\n      p5.cv.accumulateWeighted(frame, this.accumulator, curLearningRate);\n    }\n  }\n\n  getPresence() {\n    return cv.mean(this.foreground).data[0] / 255.0;\n  }\n\n  setThresholdValue(thresholdValue) {\n    this.thresholdValue = thresholdValue;\n  }\n\n  setLearningRate(learningRate) {\n    this.learningRate = learningRate;\n    this.useLearningTime = false;\n  }\n\n  setLearningTime(learningTime) {\n    this.learningTime = learningTime;\n    this.useLearningTime = true;\n  }\n\n  setIgnoreForeground(ignoreForeground) {\n    this.ignoreForeground = ignoreForeground;\n  }\n\n  setDifferenceMode(differenceMode) {\n    this.differenceMode = differenceMode;\n  }\n\n  reset() {\n    this.needToReset = true;\n  }\n}\n\nexport default RunningBackground;\n","class ObjectFinder {\n  constructor() {\n    this.rescale = 1;\n    this.multiScaleFactor = 1.1;\n    this.minNeighbors = 3;\n    this.minSizeScale = new cv.Size();\n    this.maxSizeScale = new cv.Size(1, 1);\n    this.useHistogramEqualization = true;\n    this.cannyPrunning = false;\n    this.findBiggestObject = false;\n\n    this.gray = new cv.Mat();\n    this.graySmall = new cv.Mat();\n    this.classifier = new cv.CascadeClassifier();\n    // vector<Rect>\n    this.objects = [];\n    this.tracker = new RectTracker();\n  }\n\n  setup(cascadeFilename) {\n    // FIXME: handle load errors\n    this.classifier.load(cascadeFilename);\n  }\n\n  update(newFrameMat) {\n    if (this.classifier.empty()) {\n      return;\n    }\n    if (newFrameMat.channels() === 1) {\n      this.gray = newFrameMat;\n    } else {\n      p5.cv.copyGray(newFrameMat, this.gray);\n    }\n    p5.cv.resizeToScale(this.gray, this.graySmall, this.rescale, this.rescale);\n\n    if (this.useHistogramEqualization) {\n      p5.cv.equalizeHist(this.graySmall);\n    }\n    let minSize = new cv.Size(),\n      maxSize = new cv.Size();\n    let minSide = min(this.graySmall.rows, this.graySmall.cols);\n    if (this.minSizeScale > 0) {\n      let side = this.minSizeScale * minSide;\n      minSize.width = side;\n      minSize.height = side;\n    }\n    if (this.maxSizeScale < 1) {\n      let side = this.maxSizeScale * minSide;\n      // maxSize = new cv.Size(side, side);\n      maxSize.width = side;\n      maxSize.height = side;\n    }\n\n    let rectVector = new cv.RectVector();\n    this.classifier.detectMultiScale(\n      this.graySmall,\n      rectVector,\n      this.multiScaleFactor,\n      this.minNeighbors,\n      (this.cannyPruning ? cv.CASCADE_DO_CANNY_PRUNING : 0) |\n        (this.findBiggestObject\n          ? cv.CASCADE_FIND_BIGGEST_OBJECT | cv.CASCADE_DO_ROUGH_SEARCH\n          : 0),\n      minSize,\n      maxSize\n    );\n\n    this.objects.length = 0;\n    p5.cv.cvRectVectorToArray(rectVector, this.objects);\n    rectVector.delete();\n    let objectsSize = this.objects.length;\n    let rect;\n    for (let i = 0; i < objectsSize; i++) {\n      rect = this.objects[i];\n      // FIXME check if this is meant to be /= or *=\n      (rect.width /= this.rescale), (rect.height /= this.rescale);\n      (rect.x /= this.rescale), (rect.y /= this.rescale);\n      // // FIXME check if the above does the job by reference of we need the bellow re-assingment\n      this.objects[i] = rect;\n    }\n    this.tracker.track(this.objects);\n  }\n\n  size() {\n    return this.objects.length;\n  }\n\n  getObject(i) {\n    return this.objects[i];\n  }\n\n  getObjectSmoothed(i) {\n    return this.tracker.getSmoothed(this.getLabel(i));\n  }\n\n  getVelocity(i) {\n    return this.tracker.getVelocity(i);\n  }\n\n  getLabel(i) {\n    return this.tracker.getCurrentLabels()[i];\n  }\n\n  getTracker() {\n    return this.tracker;\n  }\n\n  draw() {\n    push();\n    noFill();\n    stroke(0, 192, 0);\n    let size = this.size();\n    let object;\n    for (let i = 0; i < size; i++) {\n      object = this.getObject(i);\n      rect(object.x, object.y, object.width, object.height);\n      text(this.getLabel(i), object.x, object.y - 3);\n    }\n    pop();\n  }\n\n  setPreset(preset) {\n    if (preset === ObjectFinder.FAST) {\n      this.setRescale(0.25);\n      this.setMinNeighbors(2);\n      this.setMultiScaleFactor(1.2);\n      this.setMinSizeScale(0.25);\n      this.setMaxSizeScale(0.75);\n      this.setCannyPruning(true);\n      this.setFindBiggestObject(false);\n    } else if (preset === ObjectFinder.ACCURATE) {\n      this.setRescale(0.5);\n      this.setMinNeighbors(6);\n      this.setMultiScaleFactor(1.02);\n      this.setMinSizeScale(0.1);\n      this.setMaxSizeScale(1);\n      this.setCannyPruning(true);\n      this.setFindBiggestObject(false);\n    } else if (preset === ObjectFinder.SENSITIVE) {\n      this.setRescale(0.5);\n      this.setMinNeighbors(1);\n      this.setMultiScaleFactor(1.02);\n      this.setMinSizeScale(0.1);\n      this.setMaxSizeScale(1);\n      this.setCannyPruning(false);\n      this.setFindBiggestObject(false);\n    }\n  }\n\n  setRescale(rescale) {\n    this.rescale = rescale;\n  }\n\n  setMinNeighbors(minNeighbors) {\n    this.minNeighbors = minNeighbors;\n  }\n\n  setMultiScaleFactor(multiScaleFactor) {\n    this.multiScaleFactor = multiScaleFactor;\n  }\n\n  setCannyPruning(cannyPruning) {\n    this.cannyPrunning = cannyPruning;\n  }\n\n  setFindBiggestObject(findBiggestObject) {\n    this.findBiggestObject = findBiggestObject;\n  }\n\n  setUseHistogramEqualization(useHistogramEqualization) {\n    this.useHistogramEqualization = useHistogramEqualization;\n  }\n\n  setMinSizeScale(minSizeScale) {\n    this.minSizeScale = minSizeScale;\n  }\n\n  setMaxSizeScale(maxSizeScale) {\n    this.maxSizeScale = maxSizeScale;\n  }\n}\n\nObjectFinder.FAST = 0;\nObjectFinder.ACCURATE = 1;\nObjectFinder.SENSITIVE = 2;\n\nexport default ObjectFinder;\n","class Flow {\n  constructor() {\n    this.last = new cv.Mat();\n    this.curr = new cv.Mat();\n    this.hasFlow = false;\n  }\n\n  //call these functions to calculate flow on sequential images.\n  //After this call the flow field will be populated and\n  //subsequent calls to getFlow() will be updated\n\n  //call with two contiguous images\n  calcOpticalFlowTo(lastMat, currentMat) {\n    if (lastMat.channels() === 1 && currentMat.channels() === 1) {\n      this.calcFlow(lastMat, currentMat);\n    } else {\n      p5.cv.copyGray(lastMat, this.last);\n      p5.cv.copyGray(currentMat, this.curr);\n      this.calcFlow(this.last, this.curr);\n    }\n    this.hasFlow = true;\n  }\n\n  //call with subsequent images to do running optical flow.\n  //the Flow class internally stores the last image for convenience\n  calcOpticalFlow(currentMat) {\n    p5.cv.copyGray(currentMat, this.curr);\n    let lastSize = this.last.size();\n    let currSize = this.curr.size();\n    if (\n      lastSize.width === currSize.width &&\n      lastSize.height === currSize.height\n    ) {\n      this.calcFlow(this.last, this.curr);\n      this.hasFlow = true;\n    }\n    p5.cv.swap(this.curr, this.last);\n  }\n\n  draw(x, y, renderWidth, renderHeight) {\n    x = x || 0;\n    y = y || 0;\n    renderWidth = renderWidth || width;\n    renderHeight = renderHeight || height;\n    if (this.hasFlow) {\n      this.drawFlow(x, y, width, height);\n    }\n  }\n\n  drawRect(rect) {\n    if (this.hasFlow) {\n      this.drawFlow(rect.x, rect.y, rect.width, rect.height);\n    }\n  }\n\n  getWidth() {\n    return this.curr.cols;\n  }\n\n  getHeight() {\n    return this.curr.rows;\n  }\n\n  resetFlow() {\n    this.last.setTo(p5.cv.ZERO_SCALAR);\n    this.curr.setTo(p5.cv.ZERO_SCALAR);\n    this.hasFlow = false;\n  }\n\n  // for subclass override\n  calcFlow(prevMat, nextMat) {}\n}\n\n//there are two implementations of Flow\n//use Farneback for a dense flow field,\n//use PyrLK for specific features\n\n//see http://opencv.willowgarage.com/documentation/cpp/motion_analysis_and_object_tracking.html\n//for more info on the meaning of these parameters\n\nclass FlowPyrLK extends Flow {\n  constructor() {\n    super();\n    this.prevPts = new cv.Mat();\n    this.nextPts = new cv.Mat();\n\n    //LK feature finding parameters\n    this.windowSize = new cv.Size(32, 32);\n    this.maxLevel = 3;\n    this.maxFeatures = 200;\n\n    // parameters for ShiTomasi corner detection\n    this.maxCorners = 30;\n    this.blockSize = 7;\n    this.qualityLevel = 0.01;\n    //min distance for PyrLK\n    this.minDistance = 4;\n\n    this.criteria = new cv.TermCriteria(\n      cv.TERM_CRITERIA_EPS | cv.TERM_CRITERIA_COUNT,\n      10,\n      0.03\n    );\n\n    //pyramid levels\n    this.pyramidLevels = 10;\n\n    this.calcFeaturesNextFrame = true;\n\n    //pyramid + err/status data\n    this.pyramid = new cv.Mat();\n    this.prevPyramid = new cv.Mat();\n    this.status = new cv.Mat();\n    this.err = new cv.Mat();\n  }\n\n  //flow parameters\n  setMinDistance(minDistance) {\n    this.minDistance = minDistance;\n  }\n  setWindowSize(winSize) {\n    this.windowSize.width = winSize;\n    this.windowSize.height = winSize;\n  }\n\n  //feature finding parameters\n  setMaxLevel(maxLevel) {\n    this.maxLevel = maxLevel;\n  }\n\n  setMaxFeatures(maxFeatures) {\n    this.maxFeatures = maxFeatures;\n  }\n\n  setQualityLevel(qualityLevel) {\n    this.qualityLevel = qualityLevel;\n  }\n\n  setPyramidLevels(levels) {\n    this.pyramidLevels = levels;\n  }\n\n  //returns tracking features for this image\n  getFeatures() {\n    // FIXME: make sure these are cv.Point like\n    return p5.cv.cvFeaturesToPoints(this.prevPts);\n  }\n\n  getCurrent() {\n    let result = [];\n    for (let i = 0; i < this.nextPts.rows; i++) {\n      if (this.status.data[i]) {\n        result.push(p5.cv.getFeatureAsPoint(this.nextPts, i));\n      }\n    }\n    return result;\n  }\n\n  getMotion() {\n    let result = [];\n    let featuresSize = this.prevPts.rows;\n    for (let i = 0; i < featuresSize; i++) {\n      if (this.status.data[i]) {\n        result.push(\n          cv.Point.sub(\n            p5.cv.getFeatureAsPoint(this.nextPts, i),\n            p5.cv.getFeatureAsPoint(this.prevPts, i)\n          )\n        );\n      }\n    }\n    return result;\n  }\n\n  // recalculates features to track\n  resetFeaturesToTrack() {\n    this.calcFeaturesNextFrame = true;\n  }\n  setFeaturesToTrack(features) {\n    this.nextPts = features;\n    this.calcFeaturesNextFrame = false;\n  }\n  resetFlow() {\n    super.resetFlow();\n    this.resetFeaturesToTrack();\n    this.prevPts = new cv.Mat();\n  }\n\n  drawFlow(drawX, drawY, drawWidth, drawHeight) {\n    let scaleX = drawWidth / width;\n    let scaleY = drawHeight / height;\n    let prevPtsSize = this.prevPts.rows;\n\n    beginShape(LINES);\n    for (let i = 0; i < prevPtsSize; i++) {\n      if (this.status.data[i]) {\n        vertex(\n          this.prevPts.data32F[i * 2] * scaleX + drawX,\n          this.prevPts.data32F[i * 2 + 1] * scaleY + drawY,\n          9\n        );\n\n        vertex(\n          this.nextPts.data32F[i * 2] * scaleX + drawX,\n          this.nextPts.data32F[i * 2 + 1] * scaleY + drawY,\n          9\n        );\n      }\n    }\n    endShape();\n  }\n\n  calcFlow(prevMat, nextMat) {\n    if (!this.nextPts.empty() || this.calcFeaturesNextFrame) {\n      if (this.calcFeaturesNextFrame) {\n        this.calcFeaturesToTrack(this.prevPts, nextMat);\n        this.calcFeaturesNextFrame = false;\n      } else {\n        p5.cv.swap(this.prevPts, this.nextPts);\n      }\n      this.nextPts.setTo(p5.cv.ZERO_SCALAR);\n\n      cv.calcOpticalFlowPyrLK(\n        prevMat,\n        nextMat,\n        this.prevPts,\n        this.nextPts,\n        this.status,\n        this.err,\n        this.windowSize,\n        this.maxLevel\n      );\n\n      // cv.calcOpticalFlowPyrLK(oldGray, frameGray, p0, p1, st, err, winSize, maxLevel, criteria);\n\n      // status.resize(nextPts.size(),0);\n    } else {\n      this.calcFeaturesToTrack(this.nextPts, nextMat);\n    }\n  }\n\n  calcFeaturesToTrack(features, nextMat) {\n    /* goodFeaturesToTrack arguments\n\n        image – single-channel 8-bit input image.\n        edges – output edge map; it has the same size and type as image .\n        threshold1 – first threshold for the hysteresis procedure.\n        threshold2 – second threshold for the hysteresis procedure.\n        apertureSize – aperture size for the Sobel() operator.\n        L2gradient - a flag, indicating whether a more accurate L_2 norm =\\sqrt{(dI/dx)^2 + (dI/dy)^2} should be used to calculate the image gradient magnitude ( L2gradient=true ), or whether the default L_1 norm =|dI/dx|+|dI/dy| is enough ( L2gradient=false ).\n        \n        cv.goodFeaturesToTrack(oldGray, p0, maxCorners, qualityLevel, minDistance, none, blockSize);\n\n        */\n    cv.goodFeaturesToTrack(\n      nextMat,\n      features,\n      this.maxFeatures,\n      this.qualityLevel,\n      this.minDistance\n    );\n  }\n}\n\nclass FlowFarneback extends Flow {\n  constructor() {\n    super();\n\n    this.flow = new cv.Mat();\n\n    this.pyramidScale = 0.5;\n    this.numLevels = 4;\n    this.windowSize = 8;\n    this.numIterations = 2;\n    this.polyN = 7;\n    this.polySigma = 1.5;\n    this.farnebackGaussian = false;\n    this.renderStep = 60;\n\n    // let frame2 = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n    // let next = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n    // let flow = new cv.Mat(video.height, video.width, cv.CV_32FC2);\n    // let flowVec = new cv.MatVector();\n    // let mag = new cv.Mat(video.height, video.width, cv.CV_32FC1);\n    // let ang = new cv.Mat(video.height, video.width, cv.CV_32FC1);\n    // let rgb = new cv.Mat(video.height, video.width, cv.CV_8UC3);\n  }\n\n  setPyramidScale(scale) {\n    if (scale < 0.0 || scale >= 1.0) {\n      console.warn(\n        'FlowFarneback::setPyramidScale',\n        'setting scale to a number outside of 0 - 1'\n      );\n      scale = constrain(scale, 0.0, 1.0);\n    }\n    this.pyramidScale = scale;\n  }\n  setNumLevels(levels) {\n    this.numLevels = levels;\n  }\n  setWindowSize(winSize) {\n    this.windowSize = winSize;\n  }\n  setNumIterations(iterations) {\n    this.numIterations = iterations;\n  }\n  setPolyN(polyN) {\n    this.polyN = polyN;\n  }\n  setPolySigma(polySigma) {\n    this.polySigma = polySigma;\n  }\n  setUseGaussian(gaussian) {\n    this.farnebackGaussian = gaussian;\n  }\n\n  //call this if you switch to a new video file to reset internal caches\n  resetFlow() {\n    super.resetFlow();\n    this.flow.setTo(p5.cv.ZERO_SCALAR);\n  }\n\n  calcFlow(prevMat, nextMat) {\n    let flags = 0;\n    if (this.hasFlow) {\n      flags = cv.OPTFLOW_USE_INITIAL_FLOW;\n    }\n    if (this.farnebackGaussian) {\n      flags |= cv.OPTFLOW_FARNEBACK_GAUSSIAN;\n    }\n    // cv.calcOpticalFlowFarneback(prevMat, nextMat, this.flow, 0.5, 3, 15, 3, 5, 1.2, 0);\n\n    cv.calcOpticalFlowFarneback(\n      prevMat,\n      nextMat,\n      this.flow,\n      this.pyramidScale,\n      this.numLevels,\n      this.windowSize,\n      this.numIterations,\n      this.polyN,\n      this.polySigma,\n      flags\n    );\n  }\n\n  getFlow() {\n    if (!hasFlow) {\n      this.flow = cv.Mat.zeros(1, 1, CV_32FC2);\n    }\n    return this.flow;\n  }\n\n  getTotalFlow() {\n    return this.getTotalFlowInRegion(0, 0, this.flow.cols, this.flow.rows);\n  }\n  getAverageFlow() {\n    return this.getAverageFlowInRegion(0, 0, this.flow.cols, this.flow.rows);\n  }\n  getFlowOffset(x, y) {\n    if (!this.hasFlow) {\n      return new cv.Point();\n    }\n    // (x + (y * w) ) * channels()\n    let xIndex = (x + y * this.flow.cols) * 2;\n    let yIndex = xIndex + 1;\n    return { x: this.flow.data32F[xIndex], y: this.flow.data32F[yIndex] };\n  }\n  getFlowPosition(x, y) {\n    let position = this.getFlowOffset(x, y);\n    position.x += x;\n    position.y += y;\n    return position;\n  }\n  getTotalFlowInRegion(regionX, regionY, regionWidth, regionHeight) {\n    if (!this.hasFlow) {\n      return new cv.Point(0, 0);\n    }\n\n    let x = 0;\n    let y = 0;\n    let total = this.flow.total();\n    let data = this.flow.data32F;\n\n    for (let i = 0; i < total; i++) {\n      let xIndex = i * 2;\n      let yIndex = i * 2 + 1;\n      x += data[xIndex];\n      y += data[yIndex];\n    }\n\n    return { x: x, y: y };\n  }\n\n  getAverageFlowInRegion(regionX, regionY, regionWidth, regionHeight) {\n    let flow = this.getTotalFlowInRegion(\n      regionX,\n      regionY,\n      regionWidth,\n      regionHeight\n    );\n    flow.x /= regionWidth;\n    flow.y /= regionHeight;\n    return flow;\n  }\n\n  drawFlow(rectX, rectY, rectWidth, rectHeight) {\n    if (!this.hasFlow) {\n      return;\n    }\n    let scaleX = rectWidth / this.flow.cols;\n    let scaleY = rectHeight / this.flow.rows;\n    console.log(rectWidth, rectHeight);\n    beginShape(LINES);\n    let flowPosition;\n    for (let y = 0; y < this.flow.rows; y += this.renderStep) {\n      for (let x = 0; x < this.flow.cols; x += this.renderStep) {\n        flowPosition = this.getFlowPosition(x, y);\n        vertex(x * scaleX + rectX, y * scaleY + rectY);\n        vertex(\n          flowPosition.x * scaleX + rectX,\n          flowPosition.y * scaleY + rectY\n        );\n      }\n    }\n    endShape();\n  }\n}\n\nclass Graph {\n  constructor(historyLength, minValue, maxValue) {\n    this.minValue = minValue;\n    this.maxValue = maxValue;\n    this.historyLength = historyLength;\n    this.history = new Float32Array(historyLength);\n    this.index = 0;\n  }\n\n  addSample(sample) {\n    this.history[this.index] = sample;\n    this.index = (this.index + 1) % this.historyLength;\n  }\n\n  getNormalizedSample(offset) {\n    var i = (this.index + offset) % this.historyLength;\n    var range = this.maxValue - this.minValue;\n    return (this.history[i] - this.minValue) / range;\n  }\n\n  draw(width, height) {\n    push();\n    noFill();\n    strokeWeight(1);\n    beginShape();\n    var range = this.maxValue - this.minValue;\n    for (var offset = 0; offset < this.historyLength; offset++) {\n      var i = (this.index + offset) % this.historyLength;\n      var x = (offset * width) / this.historyLength;\n      var normalized = (this.history[i] - this.minValue) / range;\n      var y = height - normalized * height;\n      vertex(x, y);\n    }\n    endShape();\n    pop();\n  }\n}\n\np5.cv.samePixels = function (a1, a2, stride, n) {\n  for (var i = 0; i < n; i += stride) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n// TODO: review all functions that make new matrices and cleanup\np5.cv.same = function (matA, matB) {\n  let diff = new cv.Mat();\n  let matAGray = new cv.Mat();\n  let matBGray = new cv.Mat();\n  p5.cv.copyGray(matA, matAGray);\n  p5.cv.copyGray(matB, matBGray);\n  cv.absdiff(matAGray, matBGray, diff);\n  let same = cv.countNonZero(diff) === 0;\n  diff.delete();\n  matAGray.delete();\n  matBGray.delete();\n  return same;\n};\n\n// copied from https://github.com/anvaka/oflow\n\nclass OFlow extends Flow {\n  constructor() {\n    super();\n    this.step = 8;\n    this.flow = null;\n\n    this.uMotionGraph = new Graph(100, -this.step / 2, +this.step / 2);\n    this.vMotionGraph = new Graph(100, -this.step / 2, +this.step / 2);\n  }\n\n  calcOpticalFlow(currentMat) {\n    this.curr = currentMat;\n    let lastSize = this.last.size();\n    let currSize = this.curr.size();\n    if (\n      lastSize.width === currSize.width &&\n      lastSize.height === currSize.height\n    ) {\n      // TODO: profile CPU improvements\n      // cheap way to ignore duplicate frames\n      if (!p5.cv.samePixels(this.last.data, currentMat.data, 4, width)) {\n        this.calcFlow(this.last, this.curr);\n        this.hasFlow = true;\n      }\n    }\n    p5.cv.swap(this.curr, this.last);\n  }\n\n  // TODO: this could be simpler with OpenCV operations instead of individual byte access ?\n  // assumes rgba images, but only uses one channel\n  calcFlow(prevMat, nextMat) {\n    if (prevMat.type() !== cv.CV_8UC4 || nextMat.type() !== cv.CV_8UC4) {\n      console.warn('currently supporting only RGBA images');\n      this.hasFlow = false;\n      return;\n    }\n\n    let width = prevMat.cols;\n    let height = prevMat.rows;\n\n    let newImage = nextMat.data;\n    let oldImage = prevMat.data;\n\n    var zones = [];\n    var step = this.step;\n    var winStep = step * 2 + 1;\n\n    var A2, A1B2, B1, C1, C2;\n    var u, v, uu, vv;\n    uu = vv = 0;\n    var wMax = width - step - 1;\n    var hMax = height - step - 1;\n    var globalY, globalX, localY, localX;\n\n    for (globalY = step + 1; globalY < hMax; globalY += winStep) {\n      for (globalX = step + 1; globalX < wMax; globalX += winStep) {\n        A2 = A1B2 = B1 = C1 = C2 = 0;\n        // console.log('here',globalX,globalY);\n        for (localY = -step; localY <= step; localY++) {\n          for (localX = -step; localX <= step; localX++) {\n            var address = (globalY + localY) * width + globalX + localX;\n\n            var gradX =\n              newImage[(address - 1) * 4] - newImage[(address + 1) * 4];\n\n            var gradY =\n              newImage[(address - width) * 4] - newImage[(address + width) * 4];\n            var gradT = oldImage[address * 4] - newImage[address * 4];\n\n            A2 += gradX * gradX;\n            A1B2 += gradX * gradY;\n            B1 += gradY * gradY;\n            C2 += gradX * gradT;\n            C1 += gradY * gradT;\n          }\n        }\n\n        var delta = A1B2 * A1B2 - A2 * B1;\n\n        if (delta !== 0) {\n          /* system is not singular - solving by Kramer method */\n          var Idelta = step / delta;\n          var deltaX = -(C1 * A1B2 - C2 * B1);\n          var deltaY = -(A1B2 * C2 - A2 * C1);\n\n          u = deltaX * Idelta;\n          v = deltaY * Idelta;\n        } else {\n          /* singular system - find optical flow in gradient direction */\n          var norm = (A1B2 + A2) * (A1B2 + A2) + (B1 + A1B2) * (B1 + A1B2);\n          if (norm !== 0) {\n            var IGradNorm = step / norm;\n            var temp = -(C1 + C2) * IGradNorm;\n\n            u = (A1B2 + A2) * temp;\n            v = (B1 + A1B2) * temp;\n          } else {\n            u = v = 0;\n          }\n        }\n\n        if (-winStep < u && u < winStep && -winStep < v && v < winStep) {\n          uu += u;\n          vv += v;\n          zones.push(new cv.Rect(globalX, globalY, u, v));\n        }\n      }\n    }\n\n    this.flow = {\n      zones: zones,\n      u: uu / zones.length,\n      v: vv / zones.length,\n    };\n\n    this.hasFlow = true;\n\n    return this.flow;\n  }\n\n  drawFlow(rectX, rectY, rectWidth, rectHeight) {\n    if (!this.hasFlow) {\n      return;\n    }\n    let scaleX = rectWidth / this.curr.cols;\n    let scaleY = rectHeight / this.curr.rows;\n\n    if (this.flow && this.flow.u !== 0 && this.flow.v !== 0) {\n      this.uMotionGraph.addSample(this.flow.u);\n      this.vMotionGraph.addSample(this.flow.v);\n\n      strokeWeight(2);\n\n      let step = this.step;\n      this.flow.zones.forEach(function (zone) {\n        stroke(\n          map(zone.width, -step, +step, 0, 255),\n          map(zone.height, -step, +step, 0, 255),\n          128\n        );\n        line(\n          zone.x * scaleX + rectX,\n          zone.y * scaleY + rectY,\n          (zone.x + zone.width) * scaleX + rectX,\n          (zone.y + zone.height) * scaleY + rectY\n        );\n      });\n    }\n  }\n\n  plotGraphs(rectX, rectY, rectWidth, rectHeight) {\n    if (!this.hasFlow) {\n      return;\n    }\n    if (this.flow && this.flow.u !== 0 && this.flow.v !== 0) {\n      // draw left-right motion\n      this.uMotionGraph.draw(rectWidth, rectHeight / 2);\n      line(\n        rectX,\n        rectY + rectHeight / 4,\n        rectX + rectWidth,\n        rectY + rectHeight / 4\n      );\n\n      // draw up-down motion\n      translate(0, rectHeight / 2);\n      this.vMotionGraph.draw(rectWidth, rectHeight / 2);\n      line(\n        rectX,\n        rectY + rectHeight / 4,\n        rectX + rectWidth,\n        rectY + rectHeight / 4\n      );\n    }\n  }\n}\n\nexport { Flow, FlowPyrLK, FlowFarneback, OFlow, Graph };\n","p5.cv.TrackingColorMode = {\n  TRACK_COLOR_RGB: 0,\n  TRACK_COLOR_HSV: 1,\n  TRACK_COLOR_H: 2,\n  TRACK_COLOR_HS: 3,\n};\n\nclass ContourFinder {\n  constructor() {\n    this.hsvBuffer = new cv.Mat();\n    this.thresh = new cv.Mat();\n\n    this.autoThreshold = true;\n    this.invert = false;\n    this.simplify = true;\n\n    this.thresholdValue = 128;\n    this.thresholdValueMax = 255;\n\n    this.useTargetColor = false;\n    this.trackingColorMode = p5.cv.TrackingColorMode.TRACK_COLOR_HSV;\n    this.targetColor = color(0);\n\n    this.minArea = 0;\n    this.maxArea = Number.POSITIVE_INFINITY;\n\n    this.minAreaNorm = false;\n    this.maxAreaNorm = false;\n    // FIXME check of this needs will work as [] or Mat\n    this.contours = [];\n    this.polylines = [];\n\n    this.tracker = new RectTracker();\n    this.boundingRects = [];\n    this.holes = [];\n\n    this.contourFindingMode = cv.RETR_EXTERNAL;\n    this.sortBySize = false;\n\n    this.resetMinArea();\n    this.resetMaxArea();\n  }\n\n  findContours(sourceMat) {\n    // threshold the image using a tracked color or just binary grayscale\n    if (this.useTargetColor) {\n      // Scalar is equivalent to [0, 0, 0, 0]\n      let offset = [\n        this.thresholdValue,\n        this.thresholdValue,\n        this.thresholdValue,\n        0,\n      ];\n      let base = p5.cv.colorToCvScalar(this.targetColor);\n      if (this.trackingColorMode === p5.cv.TrackingColorMode.TRACK_COLOR_RGB) {\n        //inRange(img, base - offset, base + offset, thresh);\n        // cv.inRange(\n        //   sourceMat,\n        //   cv.Scalar.sub(base, offset),\n        //   cv.Scalar.add(base + offset),\n        //   this.thresh\n        // );\n        let lowerb = new cv.Mat(\n          this.sourceMat.rows,\n          this.sourceMat.cols,\n          this.sourceMat.type(),\n          cv.Scalar.sub(base, offset)\n        );\n        let upperb = new cv.Mat(\n          this.sourceMat.rows,\n          this.sourceMat.cols,\n          this.sourceMat.type(),\n          cv.Scalar.add(base, offset)\n        );\n        cv.inRange(\n          sourceMat,\n          cv.Scalar.sub(base, offset),\n          cv.Scalar.add(base + offset),\n          this.thresh\n        );\n        lowerb.delete();\n        upperb.delete();\n      } else {\n        // all the HSV modes are broken incorrect,\n        // because opencv uses hue 0-180 not 0-255\n        // which means that the math doesn't wrap.\n        if (this.trackingColorMode === p5.cv.TrackingColorMode.TRACK_COLOR_H) {\n          offset[1] = 255;\n          offset[2] = 255;\n        }\n        if (this.trackingColorMode === p5.cv.TrackingColorMode.TRACK_COLOR_HS) {\n          offset[2] = 255;\n        }\n        if (!p5.cv.getAllocated(this.hsvBuffer)) {\n          p5.cv.imitate(this.hsvBuffer, sourceMat);\n        }\n        cv.cvtColor(sourceMat, this.hsvBuffer, cv.COLOR_RGBA2RGB);\n        cv.cvtColor(this.hsvBuffer, this.hsvBuffer, cv.COLOR_RGB2HSV);\n        base = p5.cv.convertSingleColor(this.targetColor, cv.COLOR_RGBA2RGB);\n        base = p5.cv.convertSingleColor(base, cv.COLOR_RGB2HSV);\n\n        let lowerb = new cv.Mat(\n          this.hsvBuffer.rows,\n          this.hsvBuffer.cols,\n          this.hsvBuffer.type(),\n          cv.Scalar.sub(base, offset)\n        );\n        let upperb = new cv.Mat(\n          this.hsvBuffer.rows,\n          this.hsvBuffer.cols,\n          this.hsvBuffer.type(),\n          cv.Scalar.add(base, offset)\n        );\n        cv.inRange(this.hsvBuffer, lowerb, upperb, this.thresh);\n        lowerb.delete();\n        upperb.delete();\n      }\n    } else {\n      p5.cv.copyGray(sourceMat, this.thresh);\n    }\n\n    if (this.autoThreshold) {\n      p5.cv.threshold(this.thresh, this.thresholdValue, this.invert);\n    }\n\n    // run the contour finder\n    let allContours = new cv.MatVector();\n    let hierarchy = new cv.Mat();\n    let simplifyMode = this.simplify\n      ? cv.CHAIN_APPROX_SIMPLE\n      : cv.CHAIN_APPROX_NONE;\n    cv.findContours(\n      this.thresh,\n      allContours,\n      hierarchy,\n      this.contourFindingMode,\n      simplifyMode\n    );\n\n    // filter the contours\n    let needMinFilter = this.minArea > 0;\n    let needMaxFilter = this.maxAreaNorm\n      ? this.maxArea < 1\n      : this.maxArea < Number.POSITIVE_INFINITY;\n    let allIndices = [];\n    let allAreas = [];\n    let allHoles = [];\n    if (needMinFilter || needMaxFilter) {\n      let imgArea = sourceMat.rows * sourceMat.cols;\n      let imgMinArea = this.minAreaNorm ? this.minArea * imgArea : this.minArea;\n      let imgMaxArea = this.maxAreaNorm ? this.maxArea * imgArea : this.maxArea;\n\n      for (let i = 0; i < allContours.size(); i++) {\n        let curArea = cv.contourArea(allContours.get(i), true);\n        let hole = true;\n        if (curArea < 0) {\n          curArea = -curArea;\n          hole = false;\n        }\n        allHoles.push(hole);\n        allAreas.push(curArea);\n        if (\n          (!needMinFilter || curArea >= imgMinArea) &&\n          (!needMaxFilter || curArea <= imgMaxArea)\n        ) {\n          allIndices.push(i);\n        }\n      }\n    } else {\n      for (let i = 0; i < allContours.size(); i++) {\n        if (this.sortBySize) {\n          allAreas.push(cv.contourArea(allContours.get(i)));\n        }\n        allIndices.push(i);\n      }\n    }\n\n    if (allIndices.length > 1 && this.sortBySize) {\n      // Sort contour indices, based on a separate vector of areas.\n      // Sort contour indices into decreasing order, based on a vector of\n      // contour areas.  Later, we will use these indices to order the\n      // contours (which are stored in a separate vector).\n      /* bool operator()(size_t a, size_t b) const\n            {\n                return mAreaVec[a] > mAreaVec[b];\n            } */\n      allIndices.sort((a, b) => {\n        if (allAreas[a] > allAreas[b]) return 1;\n        if (allAreas[a] < allAreas[b]) return -1;\n        return 0;\n      });\n    }\n\n    // generate polylines and bounding boxes from the contours\n    this.contours.length = 0;\n    this.polylines.length = 0;\n    this.boundingRects.length = 0;\n    this.holes.length = 0;\n    let allIndicesSize = allIndices.length;\n    for (let i = 0; i < allIndicesSize; i++) {\n      let contour = allContours.get(allIndices[i]);\n      this.contours.push(contour);\n      this.polylines.push(p5.cv.cvPointsToVectors(contour));\n      this.boundingRects.push(cv.boundingRect(contour));\n      this.holes.push(allHoles[allIndices[i]]);\n    }\n\n    // track bounding boxes\n    this.tracker.track(this.boundingRects);\n  }\n\n  setFindHoles(findHoles) {\n    if (findHoles) {\n      this.contourFindingMode = cv.RETR_LIST;\n    } else {\n      this.contourFindingMode = cv.RETR_EXTERNAL;\n    }\n  }\n\n  setSortBySize(sizeSort) {\n    this.sortBySize = sizeSort;\n  }\n\n  getContours() {\n    return this.contours;\n  }\n\n  getPolylines() {\n    return this.polylines;\n  }\n\n  getBoundingRects() {\n    return this.boundingRects;\n  }\n\n  size() {\n    return this.contours.length;\n  }\n\n  getContour(i) {\n    return this.contours[i];\n  }\n\n  getPolyline(i) {\n    return this.polylines[i];\n  }\n\n  getBoundingRect(i) {\n    return this.boundingRects[i];\n  }\n\n  getCenter(i) {\n    let box = this.getBoundingRect(i);\n    return new cv.Point(box.x + box.width * 0.5, box.y + box.height * 0.5);\n  }\n\n  getCentroid(i) {\n    let m = cv.moments(this.contours[i]);\n    if (m.m00 !== 0) {\n      return new cv.Point(m.m10 / m.m00, m.m01 / m.m00);\n    } else {\n      return new cvPoint(0, 0);\n    }\n  }\n\n  getAverage(i) {\n    let average = cv.mean(this.contours[i]);\n    return new cv.Point(average[0], average[1]);\n  }\n\n  getBalance(i) {\n    return cv.Point.sub(this.getCentroid(i), this.getCenter(i));\n  }\n\n  getContourArea(i) {\n    return cv.contourArea(this.contours[i]);\n  }\n\n  getArcLength(i) {\n    return cv.arcLength(this.contours[i], true);\n  }\n\n  getConvexHull(i) {\n    if (this.contours[i]) {\n      return p5.cv.getConvexHullMat(this.contours[i]);\n    }\n  }\n\n  getConvexityDefects(i) {\n    return p5.cv.convexityDefectsCv(this.contours[i]);\n  }\n\n  getMinAreaRect(i) {\n    return cv.minAreaRect(this.contours[i]);\n  }\n\n  getMinEnclosingCircle(i) {\n    return cv.minEnclosingCircle(this.contours[i]);\n  }\n\n  getFitEllipse(i) {\n    if (this.contours[i].total() < 5) {\n      return this.getMinAreaRect(i);\n    }\n    return cv.fitEllipse(this.contours[i]);\n  }\n\n  getFitQuad(i) {\n    let convexHull = this.getConvexHull(i);\n    if (!convexHull) {\n      return;\n    }\n    let quad = convexHull.clone();\n\n    const targetPoints = 4;\n    const maxIterations = 16;\n    const infinity = Number.POSITIVE_INFINITY;\n    let minEpsilon = 0;\n    let maxEpsilon = infinity;\n    let curEpsilon = 16; // good initial guess\n\n    // unbounded binary search to simplify the convex hull until it's 4 points\n    if (quad.total() > 4) {\n      for (let i = 0; i < maxIterations; i++) {\n        cv.approxPolyDP(convexHull, quad, curEpsilon, true);\n        if (quad.total() === targetPoints) {\n          break;\n        }\n        if (quad.total() > targetPoints) {\n          minEpsilon = curEpsilon;\n          if (maxEpsilon === infinity) {\n            curEpsilon = curEpsilon * 2;\n          } else {\n            curEpsilon = (maxEpsilon + minEpsilon) / 2;\n          }\n        }\n        if (quad.total() < targetPoints) {\n          maxEpsilon = curEpsilon;\n          curEpsilon = (maxEpsilon + minEpsilon) / 2;\n        }\n      }\n    }\n\n    return quad;\n  }\n\n  getHole(i) {\n    return this.holes[i];\n  }\n\n  getVelocity(i) {\n    return this.tracker.getVelocity(i);\n  }\n\n  getLabel(i) {\n    return this.tracker.getCurrentLabels()[i];\n  }\n\n  getTracker() {\n    return this.tracker;\n  }\n\n  setAutoThreshold(autoThreshold) {\n    this.autoThreshold = autoThreshold;\n  }\n\n  setThreshold(thresholdValue) {\n    this.thresholdValue = thresholdValue;\n  }\n  // FIXME: this might not actually be used\n  setThresholdMax(thresholdValueMax) {\n    this.thresholdValueMax = thresholdValueMax;\n  }\n\n  setInvert(invert) {\n    this.invert = invert;\n  }\n\n  setUseTargetColor(useTargetColor) {\n    this.useTargetColor = useTargetColor;\n  }\n\n  setTargetColor(targetColor, trackingColorMode) {\n    this.useTargetColor = true;\n    this.targetColor = targetColor;\n    this.trackingColorMode = trackingColorMode;\n  }\n\n  setSimplify(simplify) {\n    this.simplify = simplify;\n  }\n\n  draw() {\n    push();\n    noFill();\n    let polylinesSize = this.polylines.length;\n    for (let i = 0; i < polylinesSize; i++) {\n      p5.cv.drawVectors(this.polylines[i]);\n      let boundingRect = this.getBoundingRect(i);\n      rect(\n        boundingRect.x,\n        boundingRect.y,\n        boundingRect.width,\n        boundingRect.height\n      );\n    }\n    pop();\n  }\n\n  resetMinArea() {\n    this.setMinArea(0);\n  }\n\n  resetMaxArea() {\n    this.setMaxArea(Number.POSITIVE_INFINITY);\n  }\n\n  setMinArea(minArea) {\n    this.minArea = minArea;\n    this.maxAreaNorm = false;\n  }\n\n  setMaxArea(maxArea) {\n    this.maxArea = maxArea;\n    this.minAreaNorm = false;\n  }\n\n  setMinAreaRadius(minAreaRadius) {\n    this.minArea = PI * minAreaRadius * minAreaRadius;\n    this.minAreaNorm = false;\n  }\n\n  setMaxAreaRadius(maxAreaRadius) {\n    this.maxArea = PI * maxAreaRadius * maxAreaRadius;\n    this.maxAreaNorm = false;\n  }\n\n  setMinAreaNorm(minAreaNorm) {\n    this.minArea = minAreaNorm;\n    this.minAreaNorm = true;\n  }\n\n  setMaxAreaNorm(maxAreaNorm) {\n    this.maxArea = maxAreaNorm;\n    this.maxAreaNorm = true;\n  }\n}\n\nexport default ContourFinder;\n","import './p5.cv.utils';\nimport './p5.cv.utilities';\n\nimport './p5.cv.helpers';\nimport './p5.cv.wrappers';\n\nimport './p5.cv.tracker';\n\nimport {\n  TrackedObject,\n  Tracker,\n  PointTracker,\n  RectTracker,\n  Follower,\n  RectFollower,\n  PointFollower,\n  TrackerFollower,\n  RectTrackerFollower,\n  PointTrackerFollower,\n} from './p5.cv.tracker';\n\nwindow.Tracker = Tracker;\nwindow.TrackedObject = TrackedObject;\nwindow.RectTracker = RectTracker;\nwindow.PointTracker = PointTracker;\nwindow.Follower = Follower;\nwindow.RectFollower = RectFollower;\nwindow.PointFollower = PointFollower;\nwindow.TrackerFollower = TrackerFollower;\nwindow.RectTrackerFollower = RectTrackerFollower;\nwindow.PointTrackerFollower = PointTrackerFollower;\n\nimport RunningBackground from './p5.cv.running_background';\n\nwindow.RunningBackground = RunningBackground;\n\nimport ObjectFinder from './p5.cv.object_finder';\n\nwindow.ObjectFinder = ObjectFinder;\n\nimport { Flow, FlowPyrLK, FlowFarneback, OFlow, Graph } from './p5.cv.flow';\n\nwindow.Flow = Flow;\nwindow.FlowPyrLK = FlowPyrLK;\nwindow.FlowFarneback = FlowFarneback;\nwindow.OFlow = OFlow;\nwindow.Graph = Graph;\n\nimport './p5.cv.contour_finder';\nimport ContourFinder from './p5.cv.contour_finder';\n\nwindow.ContourFinder = ContourFinder;\n"],"sourceRoot":""}